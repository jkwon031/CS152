Rules useless in parser due to conflicts

    4 function: %empty

   19 d_ident: %empty

   37 if_stmt: %empty

   40 else_stmt: %empty

   42 while_stmt: %empty

   44 do_while_stmt: %empty

   46 read_stmt: %empty

   48 write_stmt: %empty

   50 cont_stmt: %empty

   52 return_stmt: %empty

   55 bool_exp: %empty

   58 r_and_exp: %empty

   61 r_exp: %empty

   66 all_b_exp: %empty

   77 exp: %empty

   82 m_exp: %empty

   88 term: %empty

   91 um_term: %empty

   95 t_term: %empty

   98 var: %empty


State 0 conflicts: 1 shift/reduce, 1 reduce/reduce
State 3 conflicts: 1 shift/reduce, 1 reduce/reduce
State 9 conflicts: 1 reduce/reduce
State 12 conflicts: 2 shift/reduce, 3 reduce/reduce
State 13 conflicts: 1 shift/reduce
State 15 conflicts: 1 reduce/reduce
State 18 conflicts: 1 reduce/reduce
State 20 conflicts: 1 shift/reduce, 4 reduce/reduce
State 23 conflicts: 2 reduce/reduce
State 30 conflicts: 4 shift/reduce, 18 reduce/reduce
State 31 conflicts: 4 shift/reduce, 18 reduce/reduce
State 34 conflicts: 2 reduce/reduce
State 35 conflicts: 2 reduce/reduce
State 37 conflicts: 1 shift/reduce
State 52 conflicts: 4 shift/reduce, 21 reduce/reduce
State 55 conflicts: 3 shift/reduce, 23 reduce/reduce
State 56 conflicts: 4 shift/reduce, 18 reduce/reduce
State 58 conflicts: 2 shift/reduce
State 64 conflicts: 2 shift/reduce
State 65 conflicts: 3 shift/reduce
State 70 conflicts: 2 reduce/reduce
State 74 conflicts: 2 shift/reduce, 6 reduce/reduce
State 76 conflicts: 2 reduce/reduce
State 77 conflicts: 2 shift/reduce, 6 reduce/reduce
State 80 conflicts: 2 shift/reduce, 6 reduce/reduce
State 83 conflicts: 1 shift/reduce
State 84 conflicts: 3 shift/reduce, 7 reduce/reduce
State 85 conflicts: 2 reduce/reduce
State 86 conflicts: 4 shift/reduce, 21 reduce/reduce
State 87 conflicts: 4 shift/reduce, 21 reduce/reduce
State 94 conflicts: 2 shift/reduce, 11 reduce/reduce
State 95 conflicts: 4 shift/reduce, 23 reduce/reduce
State 96 conflicts: 4 shift/reduce, 23 reduce/reduce
State 97 conflicts: 4 shift/reduce, 23 reduce/reduce
State 98 conflicts: 4 shift/reduce, 23 reduce/reduce
State 99 conflicts: 4 shift/reduce, 23 reduce/reduce
State 100 conflicts: 2 reduce/reduce
State 102 conflicts: 2 reduce/reduce
State 127 conflicts: 2 shift/reduce, 7 reduce/reduce
State 129 conflicts: 1 reduce/reduce
State 133 conflicts: 2 reduce/reduce
State 136 conflicts: 4 shift/reduce, 18 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | function program

    3 function: FUNC ident SEMICOLON params local body
    4         | %empty

    5 params: BEG_PARAMS declarations END_PARAMS
    6       | %empty

    7 local: BEG_LOC declarations END_LOC
    8      | %empty

    9 body: BEG_BOD s_statement END_BOD
   10     | %empty

   11 declarations: %empty
   12             | declaration SEMICOLON declarations

   13 declaration: d_ident COLON array INT
   14            | declaration d_ident

   15 ident: IDENT
   16      | %empty

   17 d_ident: ident
   18        | ident COMMA d_ident
   19        | %empty

   20 array: %empty
   21      | ARR BEG_ARR NUMBER END_ARR OF

   22 s_statement: %empty
   23            | p_statement

   24 p_statement: statement SEMICOLON
   25            | statement SEMICOLON p_statement

   26 statement: assign_stmt
   27          | if_stmt
   28          | while_stmt
   29          | do_while_stmt
   30          | read_stmt
   31          | write_stmt
   32          | cont_stmt
   33          | return_stmt

   34 assign_stmt: var ASSIGN exp
   35            | %empty

   36 if_stmt: IF bool_exp THEN p_statement SEMICOLON else_stmt END_IF
   37        | %empty

   38 else_stmt: %empty
   39          | ELSE statement SEMICOLON
   40          | %empty

   41 while_stmt: WHILE bool_exp BEG_LOOP p_statement SEMICOLON END_LOOP
   42           | %empty

   43 do_while_stmt: DO BEG_LOOP p_statement SEMICOLON END_LOOP WHILE bool_exp
   44              | %empty

   45 read_stmt: READ c_var
   46          | %empty

   47 write_stmt: WRITE c_var
   48           | %empty

   49 cont_stmt: CONT
   50          | %empty

   51 return_stmt: RETURN
   52            | %empty

   53 bool_exp: r_and_exp
   54         | r_and_exp OR bool_exp
   55         | %empty

   56 r_and_exp: r_exp
   57          | r_exp AND r_and_exp
   58          | %empty

   59 r_exp: all_b_exp
   60      | NOT all_b_exp
   61      | %empty

   62 all_b_exp: exp comp exp
   63          | TRUE
   64          | FALSE
   65          | L_PAREN bool_exp R_PAREN
   66          | %empty

   67 comp: EQ
   68     | NEQ
   69     | LT
   70     | GT
   71     | LTE
   72     | GTE
   73     | %empty

   74 exp: m_exp
   75    | m_exp PLUS exp
   76    | m_exp MINUS exp
   77    | %empty

   78 m_exp: term
   79      | term MULT m_exp
   80      | term DIV m_exp
   81      | term MOD m_exp
   82      | %empty

   83 c_exp: exp
   84      | exp COMMA c_exp

   85 term: um_term
   86     | ident L_PAREN R_PAREN
   87     | ident L_PAREN c_exp R_PAREN
   88     | %empty

   89 um_term: MINUS t_term
   90        | t_term
   91        | %empty

   92 t_term: var
   93       | NUMBER
   94       | L_PAREN exp R_PAREN
   95       | %empty

   96 var: ident
   97    | ident BEG_ARR exp END_ARR
   98    | %empty

   99 c_var: var
  100      | var COMMA c_var


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNC (258) 3
BEG_PARAMS (259) 5
END_PARAMS (260) 5
BEG_LOC (261) 7
END_LOC (262) 7
BEG_BOD (263) 9
END_BOD (264) 9
INT (265) 13
ARR (266) 21
OF (267) 21
IF (268) 36
THEN (269) 36
END_IF (270) 36
ELSE (271) 39
WHILE (272) 41 43
DO (273) 43
BEG_LOOP (274) 41 43
END_LOOP (275) 41 43
CONT (276) 49
READ (277) 45
WRITE (278) 47
AND (279) 57
OR (280) 54
NOT (281) 60
TRUE (282) 63
FALSE (283) 64
RETURN (284) 51
MINUS (285) 76 89
PLUS (286) 75
MULT (287) 79
DIV (288) 80
MOD (289) 81
EQ (290) 67
NEQ (291) 68
LT (292) 69
GT (293) 70
LTE (294) 71
GTE (295) 72
SEMICOLON (296) 3 12 24 25 36 39 41 43
COLON (297) 13
COMMA (298) 18 84 100
L_PAREN (299) 65 86 87 94
R_PAREN (300) 65 86 87 94
BEG_ARR (301) 21 97
END_ARR (302) 21 97
ASSIGN (303) 34
NUMBER (304) 21 93
IDENT (305) 15
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0 2
function (54)
    on left: 3 4, on right: 2
params (55)
    on left: 5 6, on right: 3
local (56)
    on left: 7 8, on right: 3
body (57)
    on left: 9 10, on right: 3
declarations (58)
    on left: 11 12, on right: 5 7 12
declaration (59)
    on left: 13 14, on right: 12 14
ident (60)
    on left: 15 16, on right: 3 17 18 86 87 96 97
d_ident (61)
    on left: 17 18 19, on right: 13 14 18
array (62)
    on left: 20 21, on right: 13
s_statement (63)
    on left: 22 23, on right: 9
p_statement (64)
    on left: 24 25, on right: 23 25 36 41 43
statement (65)
    on left: 26 27 28 29 30 31 32 33, on right: 24 25 39
assign_stmt (66)
    on left: 34 35, on right: 26
if_stmt (67)
    on left: 36 37, on right: 27
else_stmt (68)
    on left: 38 39 40, on right: 36
while_stmt (69)
    on left: 41 42, on right: 28
do_while_stmt (70)
    on left: 43 44, on right: 29
read_stmt (71)
    on left: 45 46, on right: 30
write_stmt (72)
    on left: 47 48, on right: 31
cont_stmt (73)
    on left: 49 50, on right: 32
return_stmt (74)
    on left: 51 52, on right: 33
bool_exp (75)
    on left: 53 54 55, on right: 36 41 43 54 65
r_and_exp (76)
    on left: 56 57 58, on right: 53 54 57
r_exp (77)
    on left: 59 60 61, on right: 56 57
all_b_exp (78)
    on left: 62 63 64 65 66, on right: 59 60
comp (79)
    on left: 67 68 69 70 71 72 73, on right: 62
exp (80)
    on left: 74 75 76 77, on right: 34 62 75 76 83 84 94 97
m_exp (81)
    on left: 78 79 80 81 82, on right: 74 75 76 79 80 81
c_exp (82)
    on left: 83 84, on right: 84 87
term (83)
    on left: 85 86 87 88, on right: 78 79 80 81
um_term (84)
    on left: 89 90 91, on right: 85
t_term (85)
    on left: 92 93 94 95, on right: 89 90
var (86)
    on left: 96 97 98, on right: 34 92 99 100
c_var (87)
    on left: 99 100, on right: 45 47 100


State 0

    0 $accept: . program $end

    FUNC  shift, and go to state 1

    $end      reduce using rule 1 (program)
    $end      [reduce using rule 4 (function)]
    FUNC      [reduce using rule 4 (function)]
    $default  reduce using rule 1 (program)

    program   go to state 2
    function  go to state 3


State 1

    3 function: FUNC . ident SEMICOLON params local body

    IDENT  shift, and go to state 4

    $default  reduce using rule 16 (ident)

    ident  go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: function . program

    FUNC  shift, and go to state 1

    $end      reduce using rule 1 (program)
    $end      [reduce using rule 4 (function)]
    FUNC      [reduce using rule 4 (function)]
    $default  reduce using rule 1 (program)

    program   go to state 7
    function  go to state 3


State 4

   15 ident: IDENT .

    $default  reduce using rule 15 (ident)


State 5

    3 function: FUNC ident . SEMICOLON params local body

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    2 program: function program .

    $default  reduce using rule 2 (program)


State 8

    3 function: FUNC ident SEMICOLON . params local body

    BEG_PARAMS  shift, and go to state 9

    $default  reduce using rule 6 (params)

    params  go to state 10


State 9

    5 params: BEG_PARAMS . declarations END_PARAMS

    IDENT  shift, and go to state 4

    END_PARAMS  reduce using rule 11 (declarations)
    COLON       reduce using rule 16 (ident)
    COLON       [reduce using rule 19 (d_ident)]
    $default    reduce using rule 16 (ident)

    declarations  go to state 11
    declaration   go to state 12
    ident         go to state 13
    d_ident       go to state 14


State 10

    3 function: FUNC ident SEMICOLON params . local body

    BEG_LOC  shift, and go to state 15

    $default  reduce using rule 8 (local)

    local  go to state 16


State 11

    5 params: BEG_PARAMS declarations . END_PARAMS

    END_PARAMS  shift, and go to state 17


State 12

   12 declarations: declaration . SEMICOLON declarations
   14 declaration: declaration . d_ident

    SEMICOLON  shift, and go to state 18
    IDENT      shift, and go to state 4

    SEMICOLON  [reduce using rule 16 (ident)]
    SEMICOLON  [reduce using rule 19 (d_ident)]
    COMMA      reduce using rule 16 (ident)
    COMMA      [reduce using rule 19 (d_ident)]
    IDENT      [reduce using rule 16 (ident)]
    IDENT      [reduce using rule 19 (d_ident)]
    $default   reduce using rule 16 (ident)

    ident    go to state 13
    d_ident  go to state 19


State 13

   17 d_ident: ident .
   18        | ident . COMMA d_ident

    COMMA  shift, and go to state 20

    COMMA     [reduce using rule 17 (d_ident)]
    $default  reduce using rule 17 (d_ident)


State 14

   13 declaration: d_ident . COLON array INT

    COLON  shift, and go to state 21


State 15

    7 local: BEG_LOC . declarations END_LOC

    IDENT  shift, and go to state 4

    END_LOC   reduce using rule 11 (declarations)
    COLON     reduce using rule 16 (ident)
    COLON     [reduce using rule 19 (d_ident)]
    $default  reduce using rule 16 (ident)

    declarations  go to state 22
    declaration   go to state 12
    ident         go to state 13
    d_ident       go to state 14


State 16

    3 function: FUNC ident SEMICOLON params local . body

    BEG_BOD  shift, and go to state 23

    $default  reduce using rule 10 (body)

    body  go to state 24


State 17

    5 params: BEG_PARAMS declarations END_PARAMS .

    $default  reduce using rule 5 (params)


State 18

   12 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 4

    COLON     reduce using rule 16 (ident)
    COLON     [reduce using rule 19 (d_ident)]
    COMMA     reduce using rule 16 (ident)
    $default  reduce using rule 11 (declarations)

    declarations  go to state 25
    declaration   go to state 12
    ident         go to state 13
    d_ident       go to state 14


State 19

   14 declaration: declaration d_ident .

    $default  reduce using rule 14 (declaration)


State 20

   18 d_ident: ident COMMA . d_ident

    IDENT  shift, and go to state 4

    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 19 (d_ident)]
    COLON      reduce using rule 16 (ident)
    COLON      [reduce using rule 19 (d_ident)]
    COMMA      reduce using rule 16 (ident)
    COMMA      [reduce using rule 19 (d_ident)]
    IDENT      [reduce using rule 16 (ident)]
    IDENT      [reduce using rule 19 (d_ident)]
    $default   reduce using rule 16 (ident)

    ident    go to state 13
    d_ident  go to state 26


State 21

   13 declaration: d_ident COLON . array INT

    ARR  shift, and go to state 27

    $default  reduce using rule 20 (array)

    array  go to state 28


State 22

    7 local: BEG_LOC declarations . END_LOC

    END_LOC  shift, and go to state 29


State 23

    9 body: BEG_BOD . s_statement END_BOD

    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    DO      shift, and go to state 32
    CONT    shift, and go to state 33
    READ    shift, and go to state 34
    WRITE   shift, and go to state 35
    RETURN  shift, and go to state 36
    IDENT   shift, and go to state 4

    END_BOD    reduce using rule 22 (s_statement)
    SEMICOLON  reduce using rule 35 (assign_stmt)
    SEMICOLON  [reduce using rule 37 (if_stmt)]
    SEMICOLON  [reduce using rule 42 (while_stmt)]
    SEMICOLON  [reduce using rule 44 (do_while_stmt)]
    SEMICOLON  [reduce using rule 46 (read_stmt)]
    SEMICOLON  [reduce using rule 48 (write_stmt)]
    SEMICOLON  [reduce using rule 50 (cont_stmt)]
    SEMICOLON  [reduce using rule 52 (return_stmt)]
    ASSIGN     reduce using rule 16 (ident)
    ASSIGN     [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident          go to state 37
    s_statement    go to state 38
    p_statement    go to state 39
    statement      go to state 40
    assign_stmt    go to state 41
    if_stmt        go to state 42
    while_stmt     go to state 43
    do_while_stmt  go to state 44
    read_stmt      go to state 45
    write_stmt     go to state 46
    cont_stmt      go to state 47
    return_stmt    go to state 48
    var            go to state 49


State 24

    3 function: FUNC ident SEMICOLON params local body .

    $default  reduce using rule 3 (function)


State 25

   12 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 12 (declarations)


State 26

   18 d_ident: ident COMMA d_ident .

    $default  reduce using rule 18 (d_ident)


State 27

   21 array: ARR . BEG_ARR NUMBER END_ARR OF

    BEG_ARR  shift, and go to state 50


State 28

   13 declaration: d_ident COLON array . INT

    INT  shift, and go to state 51


State 29

    7 local: BEG_LOC declarations END_LOC .

    $default  reduce using rule 7 (local)


State 30

   36 if_stmt: IF . bool_exp THEN p_statement SEMICOLON else_stmt END_IF

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    THEN      reduce using rule 16 (ident)
    THEN      [reduce using rule 55 (bool_exp)]
    THEN      [reduce using rule 58 (r_and_exp)]
    THEN      [reduce using rule 61 (r_exp)]
    THEN      [reduce using rule 66 (all_b_exp)]
    THEN      [reduce using rule 77 (exp)]
    THEN      [reduce using rule 82 (m_exp)]
    THEN      [reduce using rule 88 (term)]
    THEN      [reduce using rule 91 (um_term)]
    THEN      [reduce using rule 95 (t_term)]
    THEN      [reduce using rule 98 (var)]
    AND       reduce using rule 16 (ident)
    AND       [reduce using rule 61 (r_exp)]
    AND       [reduce using rule 66 (all_b_exp)]
    AND       [reduce using rule 77 (exp)]
    AND       [reduce using rule 82 (m_exp)]
    AND       [reduce using rule 88 (term)]
    AND       [reduce using rule 91 (um_term)]
    AND       [reduce using rule 95 (t_term)]
    AND       [reduce using rule 98 (var)]
    OR        reduce using rule 16 (ident)
    OR        [reduce using rule 58 (r_and_exp)]
    OR        [reduce using rule 61 (r_exp)]
    OR        [reduce using rule 66 (all_b_exp)]
    OR        [reduce using rule 77 (exp)]
    OR        [reduce using rule 82 (m_exp)]
    OR        [reduce using rule 88 (term)]
    OR        [reduce using rule 91 (um_term)]
    OR        [reduce using rule 95 (t_term)]
    OR        [reduce using rule 98 (var)]
    MINUS     [reduce using rule 16 (ident)]
    MINUS     [reduce using rule 77 (exp)]
    MINUS     [reduce using rule 82 (m_exp)]
    MINUS     [reduce using rule 88 (term)]
    MINUS     [reduce using rule 91 (um_term)]
    MINUS     [reduce using rule 95 (t_term)]
    MINUS     [reduce using rule 98 (var)]
    PLUS      reduce using rule 16 (ident)
    PLUS      [reduce using rule 77 (exp)]
    PLUS      [reduce using rule 82 (m_exp)]
    PLUS      [reduce using rule 88 (term)]
    PLUS      [reduce using rule 91 (um_term)]
    PLUS      [reduce using rule 95 (t_term)]
    PLUS      [reduce using rule 98 (var)]
    MULT      reduce using rule 16 (ident)
    MULT      [reduce using rule 77 (exp)]
    MULT      [reduce using rule 82 (m_exp)]
    MULT      [reduce using rule 88 (term)]
    MULT      [reduce using rule 91 (um_term)]
    MULT      [reduce using rule 95 (t_term)]
    MULT      [reduce using rule 98 (var)]
    DIV       reduce using rule 16 (ident)
    DIV       [reduce using rule 77 (exp)]
    DIV       [reduce using rule 82 (m_exp)]
    DIV       [reduce using rule 88 (term)]
    DIV       [reduce using rule 91 (um_term)]
    DIV       [reduce using rule 95 (t_term)]
    DIV       [reduce using rule 98 (var)]
    MOD       reduce using rule 16 (ident)
    MOD       [reduce using rule 77 (exp)]
    MOD       [reduce using rule 82 (m_exp)]
    MOD       [reduce using rule 88 (term)]
    MOD       [reduce using rule 91 (um_term)]
    MOD       [reduce using rule 95 (t_term)]
    MOD       [reduce using rule 98 (var)]
    EQ        reduce using rule 16 (ident)
    EQ        [reduce using rule 77 (exp)]
    EQ        [reduce using rule 82 (m_exp)]
    EQ        [reduce using rule 88 (term)]
    EQ        [reduce using rule 91 (um_term)]
    EQ        [reduce using rule 95 (t_term)]
    EQ        [reduce using rule 98 (var)]
    NEQ       reduce using rule 16 (ident)
    NEQ       [reduce using rule 77 (exp)]
    NEQ       [reduce using rule 82 (m_exp)]
    NEQ       [reduce using rule 88 (term)]
    NEQ       [reduce using rule 91 (um_term)]
    NEQ       [reduce using rule 95 (t_term)]
    NEQ       [reduce using rule 98 (var)]
    LT        reduce using rule 16 (ident)
    LT        [reduce using rule 77 (exp)]
    LT        [reduce using rule 82 (m_exp)]
    LT        [reduce using rule 88 (term)]
    LT        [reduce using rule 91 (um_term)]
    LT        [reduce using rule 95 (t_term)]
    LT        [reduce using rule 98 (var)]
    GT        reduce using rule 16 (ident)
    GT        [reduce using rule 77 (exp)]
    GT        [reduce using rule 82 (m_exp)]
    GT        [reduce using rule 88 (term)]
    GT        [reduce using rule 91 (um_term)]
    GT        [reduce using rule 95 (t_term)]
    GT        [reduce using rule 98 (var)]
    LTE       reduce using rule 16 (ident)
    LTE       [reduce using rule 77 (exp)]
    LTE       [reduce using rule 82 (m_exp)]
    LTE       [reduce using rule 88 (term)]
    LTE       [reduce using rule 91 (um_term)]
    LTE       [reduce using rule 95 (t_term)]
    LTE       [reduce using rule 98 (var)]
    GTE       reduce using rule 16 (ident)
    GTE       [reduce using rule 77 (exp)]
    GTE       [reduce using rule 82 (m_exp)]
    GTE       [reduce using rule 88 (term)]
    GTE       [reduce using rule 91 (um_term)]
    GTE       [reduce using rule 95 (t_term)]
    GTE       [reduce using rule 98 (var)]
    L_PAREN   [reduce using rule 16 (ident)]
    L_PAREN   [reduce using rule 77 (exp)]
    L_PAREN   [reduce using rule 82 (m_exp)]
    L_PAREN   [reduce using rule 88 (term)]
    L_PAREN   [reduce using rule 91 (um_term)]
    L_PAREN   [reduce using rule 95 (t_term)]
    L_PAREN   [reduce using rule 98 (var)]
    BEG_ARR   reduce using rule 16 (ident)
    BEG_ARR   [reduce using rule 77 (exp)]
    BEG_ARR   [reduce using rule 82 (m_exp)]
    BEG_ARR   [reduce using rule 88 (term)]
    BEG_ARR   [reduce using rule 91 (um_term)]
    BEG_ARR   [reduce using rule 95 (t_term)]
    BEG_ARR   [reduce using rule 98 (var)]
    NUMBER    [reduce using rule 16 (ident)]
    NUMBER    [reduce using rule 77 (exp)]
    NUMBER    [reduce using rule 82 (m_exp)]
    NUMBER    [reduce using rule 88 (term)]
    NUMBER    [reduce using rule 91 (um_term)]
    NUMBER    [reduce using rule 95 (t_term)]
    NUMBER    [reduce using rule 98 (var)]
    IDENT     [reduce using rule 16 (ident)]
    IDENT     [reduce using rule 77 (exp)]
    IDENT     [reduce using rule 82 (m_exp)]
    IDENT     [reduce using rule 88 (term)]
    IDENT     [reduce using rule 91 (um_term)]
    IDENT     [reduce using rule 95 (t_term)]
    IDENT     [reduce using rule 98 (var)]
    $default  reduce using rule 16 (ident)

    ident      go to state 58
    bool_exp   go to state 59
    r_and_exp  go to state 60
    r_exp      go to state 61
    all_b_exp  go to state 62
    exp        go to state 63
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 31

   41 while_stmt: WHILE . bool_exp BEG_LOOP p_statement SEMICOLON END_LOOP

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    BEG_LOOP  reduce using rule 16 (ident)
    BEG_LOOP  [reduce using rule 55 (bool_exp)]
    BEG_LOOP  [reduce using rule 58 (r_and_exp)]
    BEG_LOOP  [reduce using rule 61 (r_exp)]
    BEG_LOOP  [reduce using rule 66 (all_b_exp)]
    BEG_LOOP  [reduce using rule 77 (exp)]
    BEG_LOOP  [reduce using rule 82 (m_exp)]
    BEG_LOOP  [reduce using rule 88 (term)]
    BEG_LOOP  [reduce using rule 91 (um_term)]
    BEG_LOOP  [reduce using rule 95 (t_term)]
    BEG_LOOP  [reduce using rule 98 (var)]
    AND       reduce using rule 16 (ident)
    AND       [reduce using rule 61 (r_exp)]
    AND       [reduce using rule 66 (all_b_exp)]
    AND       [reduce using rule 77 (exp)]
    AND       [reduce using rule 82 (m_exp)]
    AND       [reduce using rule 88 (term)]
    AND       [reduce using rule 91 (um_term)]
    AND       [reduce using rule 95 (t_term)]
    AND       [reduce using rule 98 (var)]
    OR        reduce using rule 16 (ident)
    OR        [reduce using rule 58 (r_and_exp)]
    OR        [reduce using rule 61 (r_exp)]
    OR        [reduce using rule 66 (all_b_exp)]
    OR        [reduce using rule 77 (exp)]
    OR        [reduce using rule 82 (m_exp)]
    OR        [reduce using rule 88 (term)]
    OR        [reduce using rule 91 (um_term)]
    OR        [reduce using rule 95 (t_term)]
    OR        [reduce using rule 98 (var)]
    MINUS     [reduce using rule 16 (ident)]
    MINUS     [reduce using rule 77 (exp)]
    MINUS     [reduce using rule 82 (m_exp)]
    MINUS     [reduce using rule 88 (term)]
    MINUS     [reduce using rule 91 (um_term)]
    MINUS     [reduce using rule 95 (t_term)]
    MINUS     [reduce using rule 98 (var)]
    PLUS      reduce using rule 16 (ident)
    PLUS      [reduce using rule 77 (exp)]
    PLUS      [reduce using rule 82 (m_exp)]
    PLUS      [reduce using rule 88 (term)]
    PLUS      [reduce using rule 91 (um_term)]
    PLUS      [reduce using rule 95 (t_term)]
    PLUS      [reduce using rule 98 (var)]
    MULT      reduce using rule 16 (ident)
    MULT      [reduce using rule 77 (exp)]
    MULT      [reduce using rule 82 (m_exp)]
    MULT      [reduce using rule 88 (term)]
    MULT      [reduce using rule 91 (um_term)]
    MULT      [reduce using rule 95 (t_term)]
    MULT      [reduce using rule 98 (var)]
    DIV       reduce using rule 16 (ident)
    DIV       [reduce using rule 77 (exp)]
    DIV       [reduce using rule 82 (m_exp)]
    DIV       [reduce using rule 88 (term)]
    DIV       [reduce using rule 91 (um_term)]
    DIV       [reduce using rule 95 (t_term)]
    DIV       [reduce using rule 98 (var)]
    MOD       reduce using rule 16 (ident)
    MOD       [reduce using rule 77 (exp)]
    MOD       [reduce using rule 82 (m_exp)]
    MOD       [reduce using rule 88 (term)]
    MOD       [reduce using rule 91 (um_term)]
    MOD       [reduce using rule 95 (t_term)]
    MOD       [reduce using rule 98 (var)]
    EQ        reduce using rule 16 (ident)
    EQ        [reduce using rule 77 (exp)]
    EQ        [reduce using rule 82 (m_exp)]
    EQ        [reduce using rule 88 (term)]
    EQ        [reduce using rule 91 (um_term)]
    EQ        [reduce using rule 95 (t_term)]
    EQ        [reduce using rule 98 (var)]
    NEQ       reduce using rule 16 (ident)
    NEQ       [reduce using rule 77 (exp)]
    NEQ       [reduce using rule 82 (m_exp)]
    NEQ       [reduce using rule 88 (term)]
    NEQ       [reduce using rule 91 (um_term)]
    NEQ       [reduce using rule 95 (t_term)]
    NEQ       [reduce using rule 98 (var)]
    LT        reduce using rule 16 (ident)
    LT        [reduce using rule 77 (exp)]
    LT        [reduce using rule 82 (m_exp)]
    LT        [reduce using rule 88 (term)]
    LT        [reduce using rule 91 (um_term)]
    LT        [reduce using rule 95 (t_term)]
    LT        [reduce using rule 98 (var)]
    GT        reduce using rule 16 (ident)
    GT        [reduce using rule 77 (exp)]
    GT        [reduce using rule 82 (m_exp)]
    GT        [reduce using rule 88 (term)]
    GT        [reduce using rule 91 (um_term)]
    GT        [reduce using rule 95 (t_term)]
    GT        [reduce using rule 98 (var)]
    LTE       reduce using rule 16 (ident)
    LTE       [reduce using rule 77 (exp)]
    LTE       [reduce using rule 82 (m_exp)]
    LTE       [reduce using rule 88 (term)]
    LTE       [reduce using rule 91 (um_term)]
    LTE       [reduce using rule 95 (t_term)]
    LTE       [reduce using rule 98 (var)]
    GTE       reduce using rule 16 (ident)
    GTE       [reduce using rule 77 (exp)]
    GTE       [reduce using rule 82 (m_exp)]
    GTE       [reduce using rule 88 (term)]
    GTE       [reduce using rule 91 (um_term)]
    GTE       [reduce using rule 95 (t_term)]
    GTE       [reduce using rule 98 (var)]
    L_PAREN   [reduce using rule 16 (ident)]
    L_PAREN   [reduce using rule 77 (exp)]
    L_PAREN   [reduce using rule 82 (m_exp)]
    L_PAREN   [reduce using rule 88 (term)]
    L_PAREN   [reduce using rule 91 (um_term)]
    L_PAREN   [reduce using rule 95 (t_term)]
    L_PAREN   [reduce using rule 98 (var)]
    BEG_ARR   reduce using rule 16 (ident)
    BEG_ARR   [reduce using rule 77 (exp)]
    BEG_ARR   [reduce using rule 82 (m_exp)]
    BEG_ARR   [reduce using rule 88 (term)]
    BEG_ARR   [reduce using rule 91 (um_term)]
    BEG_ARR   [reduce using rule 95 (t_term)]
    BEG_ARR   [reduce using rule 98 (var)]
    NUMBER    [reduce using rule 16 (ident)]
    NUMBER    [reduce using rule 77 (exp)]
    NUMBER    [reduce using rule 82 (m_exp)]
    NUMBER    [reduce using rule 88 (term)]
    NUMBER    [reduce using rule 91 (um_term)]
    NUMBER    [reduce using rule 95 (t_term)]
    NUMBER    [reduce using rule 98 (var)]
    IDENT     [reduce using rule 16 (ident)]
    IDENT     [reduce using rule 77 (exp)]
    IDENT     [reduce using rule 82 (m_exp)]
    IDENT     [reduce using rule 88 (term)]
    IDENT     [reduce using rule 91 (um_term)]
    IDENT     [reduce using rule 95 (t_term)]
    IDENT     [reduce using rule 98 (var)]
    $default  reduce using rule 16 (ident)

    ident      go to state 58
    bool_exp   go to state 69
    r_and_exp  go to state 60
    r_exp      go to state 61
    all_b_exp  go to state 62
    exp        go to state 63
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 32

   43 do_while_stmt: DO . BEG_LOOP p_statement SEMICOLON END_LOOP WHILE bool_exp

    BEG_LOOP  shift, and go to state 70


State 33

   49 cont_stmt: CONT .

    $default  reduce using rule 49 (cont_stmt)


State 34

   45 read_stmt: READ . c_var

    IDENT  shift, and go to state 4

    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 98 (var)]
    COMMA      reduce using rule 16 (ident)
    COMMA      [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident  go to state 37
    var    go to state 71
    c_var  go to state 72


State 35

   47 write_stmt: WRITE . c_var

    IDENT  shift, and go to state 4

    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 98 (var)]
    COMMA      reduce using rule 16 (ident)
    COMMA      [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident  go to state 37
    var    go to state 71
    c_var  go to state 73


State 36

   51 return_stmt: RETURN .

    $default  reduce using rule 51 (return_stmt)


State 37

   96 var: ident .
   97    | ident . BEG_ARR exp END_ARR

    BEG_ARR  shift, and go to state 74

    BEG_ARR   [reduce using rule 96 (var)]
    $default  reduce using rule 96 (var)


State 38

    9 body: BEG_BOD s_statement . END_BOD

    END_BOD  shift, and go to state 75


State 39

   23 s_statement: p_statement .

    $default  reduce using rule 23 (s_statement)


State 40

   24 p_statement: statement . SEMICOLON
   25            | statement . SEMICOLON p_statement

    SEMICOLON  shift, and go to state 76


State 41

   26 statement: assign_stmt .

    $default  reduce using rule 26 (statement)


State 42

   27 statement: if_stmt .

    $default  reduce using rule 27 (statement)


State 43

   28 statement: while_stmt .

    $default  reduce using rule 28 (statement)


State 44

   29 statement: do_while_stmt .

    $default  reduce using rule 29 (statement)


State 45

   30 statement: read_stmt .

    $default  reduce using rule 30 (statement)


State 46

   31 statement: write_stmt .

    $default  reduce using rule 31 (statement)


State 47

   32 statement: cont_stmt .

    $default  reduce using rule 32 (statement)


State 48

   33 statement: return_stmt .

    $default  reduce using rule 33 (statement)


State 49

   34 assign_stmt: var . ASSIGN exp

    ASSIGN  shift, and go to state 77


State 50

   21 array: ARR BEG_ARR . NUMBER END_ARR OF

    NUMBER  shift, and go to state 78


State 51

   13 declaration: d_ident COLON array INT .

    $default  reduce using rule 13 (declaration)


State 52

   60 r_exp: NOT . all_b_exp

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    THEN       reduce using rule 16 (ident)
    THEN       [reduce using rule 66 (all_b_exp)]
    THEN       [reduce using rule 77 (exp)]
    THEN       [reduce using rule 82 (m_exp)]
    THEN       [reduce using rule 88 (term)]
    THEN       [reduce using rule 91 (um_term)]
    THEN       [reduce using rule 95 (t_term)]
    THEN       [reduce using rule 98 (var)]
    BEG_LOOP   reduce using rule 16 (ident)
    BEG_LOOP   [reduce using rule 66 (all_b_exp)]
    BEG_LOOP   [reduce using rule 77 (exp)]
    BEG_LOOP   [reduce using rule 82 (m_exp)]
    BEG_LOOP   [reduce using rule 88 (term)]
    BEG_LOOP   [reduce using rule 91 (um_term)]
    BEG_LOOP   [reduce using rule 95 (t_term)]
    BEG_LOOP   [reduce using rule 98 (var)]
    AND        reduce using rule 16 (ident)
    AND        [reduce using rule 66 (all_b_exp)]
    AND        [reduce using rule 77 (exp)]
    AND        [reduce using rule 82 (m_exp)]
    AND        [reduce using rule 88 (term)]
    AND        [reduce using rule 91 (um_term)]
    AND        [reduce using rule 95 (t_term)]
    AND        [reduce using rule 98 (var)]
    OR         reduce using rule 16 (ident)
    OR         [reduce using rule 66 (all_b_exp)]
    OR         [reduce using rule 77 (exp)]
    OR         [reduce using rule 82 (m_exp)]
    OR         [reduce using rule 88 (term)]
    OR         [reduce using rule 91 (um_term)]
    OR         [reduce using rule 95 (t_term)]
    OR         [reduce using rule 98 (var)]
    MINUS      [reduce using rule 16 (ident)]
    MINUS      [reduce using rule 77 (exp)]
    MINUS      [reduce using rule 82 (m_exp)]
    MINUS      [reduce using rule 88 (term)]
    MINUS      [reduce using rule 91 (um_term)]
    MINUS      [reduce using rule 95 (t_term)]
    MINUS      [reduce using rule 98 (var)]
    PLUS       reduce using rule 16 (ident)
    PLUS       [reduce using rule 77 (exp)]
    PLUS       [reduce using rule 82 (m_exp)]
    PLUS       [reduce using rule 88 (term)]
    PLUS       [reduce using rule 91 (um_term)]
    PLUS       [reduce using rule 95 (t_term)]
    PLUS       [reduce using rule 98 (var)]
    MULT       reduce using rule 16 (ident)
    MULT       [reduce using rule 77 (exp)]
    MULT       [reduce using rule 82 (m_exp)]
    MULT       [reduce using rule 88 (term)]
    MULT       [reduce using rule 91 (um_term)]
    MULT       [reduce using rule 95 (t_term)]
    MULT       [reduce using rule 98 (var)]
    DIV        reduce using rule 16 (ident)
    DIV        [reduce using rule 77 (exp)]
    DIV        [reduce using rule 82 (m_exp)]
    DIV        [reduce using rule 88 (term)]
    DIV        [reduce using rule 91 (um_term)]
    DIV        [reduce using rule 95 (t_term)]
    DIV        [reduce using rule 98 (var)]
    MOD        reduce using rule 16 (ident)
    MOD        [reduce using rule 77 (exp)]
    MOD        [reduce using rule 82 (m_exp)]
    MOD        [reduce using rule 88 (term)]
    MOD        [reduce using rule 91 (um_term)]
    MOD        [reduce using rule 95 (t_term)]
    MOD        [reduce using rule 98 (var)]
    EQ         reduce using rule 16 (ident)
    EQ         [reduce using rule 77 (exp)]
    EQ         [reduce using rule 82 (m_exp)]
    EQ         [reduce using rule 88 (term)]
    EQ         [reduce using rule 91 (um_term)]
    EQ         [reduce using rule 95 (t_term)]
    EQ         [reduce using rule 98 (var)]
    NEQ        reduce using rule 16 (ident)
    NEQ        [reduce using rule 77 (exp)]
    NEQ        [reduce using rule 82 (m_exp)]
    NEQ        [reduce using rule 88 (term)]
    NEQ        [reduce using rule 91 (um_term)]
    NEQ        [reduce using rule 95 (t_term)]
    NEQ        [reduce using rule 98 (var)]
    LT         reduce using rule 16 (ident)
    LT         [reduce using rule 77 (exp)]
    LT         [reduce using rule 82 (m_exp)]
    LT         [reduce using rule 88 (term)]
    LT         [reduce using rule 91 (um_term)]
    LT         [reduce using rule 95 (t_term)]
    LT         [reduce using rule 98 (var)]
    GT         reduce using rule 16 (ident)
    GT         [reduce using rule 77 (exp)]
    GT         [reduce using rule 82 (m_exp)]
    GT         [reduce using rule 88 (term)]
    GT         [reduce using rule 91 (um_term)]
    GT         [reduce using rule 95 (t_term)]
    GT         [reduce using rule 98 (var)]
    LTE        reduce using rule 16 (ident)
    LTE        [reduce using rule 77 (exp)]
    LTE        [reduce using rule 82 (m_exp)]
    LTE        [reduce using rule 88 (term)]
    LTE        [reduce using rule 91 (um_term)]
    LTE        [reduce using rule 95 (t_term)]
    LTE        [reduce using rule 98 (var)]
    GTE        reduce using rule 16 (ident)
    GTE        [reduce using rule 77 (exp)]
    GTE        [reduce using rule 82 (m_exp)]
    GTE        [reduce using rule 88 (term)]
    GTE        [reduce using rule 91 (um_term)]
    GTE        [reduce using rule 95 (t_term)]
    GTE        [reduce using rule 98 (var)]
    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 66 (all_b_exp)]
    SEMICOLON  [reduce using rule 77 (exp)]
    SEMICOLON  [reduce using rule 82 (m_exp)]
    SEMICOLON  [reduce using rule 88 (term)]
    SEMICOLON  [reduce using rule 91 (um_term)]
    SEMICOLON  [reduce using rule 95 (t_term)]
    SEMICOLON  [reduce using rule 98 (var)]
    L_PAREN    [reduce using rule 16 (ident)]
    L_PAREN    [reduce using rule 77 (exp)]
    L_PAREN    [reduce using rule 82 (m_exp)]
    L_PAREN    [reduce using rule 88 (term)]
    L_PAREN    [reduce using rule 91 (um_term)]
    L_PAREN    [reduce using rule 95 (t_term)]
    L_PAREN    [reduce using rule 98 (var)]
    R_PAREN    reduce using rule 16 (ident)
    R_PAREN    [reduce using rule 66 (all_b_exp)]
    R_PAREN    [reduce using rule 77 (exp)]
    R_PAREN    [reduce using rule 82 (m_exp)]
    R_PAREN    [reduce using rule 88 (term)]
    R_PAREN    [reduce using rule 91 (um_term)]
    R_PAREN    [reduce using rule 95 (t_term)]
    R_PAREN    [reduce using rule 98 (var)]
    BEG_ARR    reduce using rule 16 (ident)
    BEG_ARR    [reduce using rule 77 (exp)]
    BEG_ARR    [reduce using rule 82 (m_exp)]
    BEG_ARR    [reduce using rule 88 (term)]
    BEG_ARR    [reduce using rule 91 (um_term)]
    BEG_ARR    [reduce using rule 95 (t_term)]
    BEG_ARR    [reduce using rule 98 (var)]
    NUMBER     [reduce using rule 16 (ident)]
    NUMBER     [reduce using rule 77 (exp)]
    NUMBER     [reduce using rule 82 (m_exp)]
    NUMBER     [reduce using rule 88 (term)]
    NUMBER     [reduce using rule 91 (um_term)]
    NUMBER     [reduce using rule 95 (t_term)]
    NUMBER     [reduce using rule 98 (var)]
    IDENT      [reduce using rule 16 (ident)]
    IDENT      [reduce using rule 77 (exp)]
    IDENT      [reduce using rule 82 (m_exp)]
    IDENT      [reduce using rule 88 (term)]
    IDENT      [reduce using rule 91 (um_term)]
    IDENT      [reduce using rule 95 (t_term)]
    IDENT      [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident      go to state 58
    all_b_exp  go to state 79
    exp        go to state 63
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 53

   63 all_b_exp: TRUE .

    $default  reduce using rule 63 (all_b_exp)


State 54

   64 all_b_exp: FALSE .

    $default  reduce using rule 64 (all_b_exp)


State 55

   89 um_term: MINUS . t_term

    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    THEN       reduce using rule 16 (ident)
    THEN       [reduce using rule 95 (t_term)]
    THEN       [reduce using rule 98 (var)]
    BEG_LOOP   reduce using rule 16 (ident)
    BEG_LOOP   [reduce using rule 95 (t_term)]
    BEG_LOOP   [reduce using rule 98 (var)]
    AND        reduce using rule 16 (ident)
    AND        [reduce using rule 95 (t_term)]
    AND        [reduce using rule 98 (var)]
    OR         reduce using rule 16 (ident)
    OR         [reduce using rule 95 (t_term)]
    OR         [reduce using rule 98 (var)]
    MINUS      reduce using rule 16 (ident)
    MINUS      [reduce using rule 95 (t_term)]
    MINUS      [reduce using rule 98 (var)]
    PLUS       reduce using rule 16 (ident)
    PLUS       [reduce using rule 95 (t_term)]
    PLUS       [reduce using rule 98 (var)]
    MULT       reduce using rule 16 (ident)
    MULT       [reduce using rule 95 (t_term)]
    MULT       [reduce using rule 98 (var)]
    DIV        reduce using rule 16 (ident)
    DIV        [reduce using rule 95 (t_term)]
    DIV        [reduce using rule 98 (var)]
    MOD        reduce using rule 16 (ident)
    MOD        [reduce using rule 95 (t_term)]
    MOD        [reduce using rule 98 (var)]
    EQ         reduce using rule 16 (ident)
    EQ         [reduce using rule 95 (t_term)]
    EQ         [reduce using rule 98 (var)]
    NEQ        reduce using rule 16 (ident)
    NEQ        [reduce using rule 95 (t_term)]
    NEQ        [reduce using rule 98 (var)]
    LT         reduce using rule 16 (ident)
    LT         [reduce using rule 95 (t_term)]
    LT         [reduce using rule 98 (var)]
    GT         reduce using rule 16 (ident)
    GT         [reduce using rule 95 (t_term)]
    GT         [reduce using rule 98 (var)]
    LTE        reduce using rule 16 (ident)
    LTE        [reduce using rule 95 (t_term)]
    LTE        [reduce using rule 98 (var)]
    GTE        reduce using rule 16 (ident)
    GTE        [reduce using rule 95 (t_term)]
    GTE        [reduce using rule 98 (var)]
    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 95 (t_term)]
    SEMICOLON  [reduce using rule 98 (var)]
    COMMA      reduce using rule 16 (ident)
    COMMA      [reduce using rule 95 (t_term)]
    COMMA      [reduce using rule 98 (var)]
    L_PAREN    [reduce using rule 16 (ident)]
    L_PAREN    [reduce using rule 95 (t_term)]
    L_PAREN    [reduce using rule 98 (var)]
    R_PAREN    reduce using rule 16 (ident)
    R_PAREN    [reduce using rule 95 (t_term)]
    R_PAREN    [reduce using rule 98 (var)]
    BEG_ARR    reduce using rule 16 (ident)
    BEG_ARR    [reduce using rule 95 (t_term)]
    BEG_ARR    [reduce using rule 98 (var)]
    END_ARR    reduce using rule 16 (ident)
    END_ARR    [reduce using rule 95 (t_term)]
    END_ARR    [reduce using rule 98 (var)]
    NUMBER     [reduce using rule 16 (ident)]
    NUMBER     [reduce using rule 95 (t_term)]
    NUMBER     [reduce using rule 98 (var)]
    IDENT      [reduce using rule 16 (ident)]
    IDENT      [reduce using rule 95 (t_term)]
    IDENT      [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident   go to state 37
    t_term  go to state 81
    var     go to state 68


State 56

   65 all_b_exp: L_PAREN . bool_exp R_PAREN
   94 t_term: L_PAREN . exp R_PAREN

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    AND       reduce using rule 16 (ident)
    AND       [reduce using rule 61 (r_exp)]
    AND       [reduce using rule 66 (all_b_exp)]
    AND       [reduce using rule 77 (exp)]
    AND       [reduce using rule 82 (m_exp)]
    AND       [reduce using rule 88 (term)]
    AND       [reduce using rule 91 (um_term)]
    AND       [reduce using rule 95 (t_term)]
    AND       [reduce using rule 98 (var)]
    OR        reduce using rule 16 (ident)
    OR        [reduce using rule 58 (r_and_exp)]
    OR        [reduce using rule 61 (r_exp)]
    OR        [reduce using rule 66 (all_b_exp)]
    OR        [reduce using rule 77 (exp)]
    OR        [reduce using rule 82 (m_exp)]
    OR        [reduce using rule 88 (term)]
    OR        [reduce using rule 91 (um_term)]
    OR        [reduce using rule 95 (t_term)]
    OR        [reduce using rule 98 (var)]
    MINUS     [reduce using rule 16 (ident)]
    MINUS     [reduce using rule 77 (exp)]
    MINUS     [reduce using rule 82 (m_exp)]
    MINUS     [reduce using rule 88 (term)]
    MINUS     [reduce using rule 91 (um_term)]
    MINUS     [reduce using rule 95 (t_term)]
    MINUS     [reduce using rule 98 (var)]
    PLUS      reduce using rule 16 (ident)
    PLUS      [reduce using rule 77 (exp)]
    PLUS      [reduce using rule 82 (m_exp)]
    PLUS      [reduce using rule 88 (term)]
    PLUS      [reduce using rule 91 (um_term)]
    PLUS      [reduce using rule 95 (t_term)]
    PLUS      [reduce using rule 98 (var)]
    MULT      reduce using rule 16 (ident)
    MULT      [reduce using rule 77 (exp)]
    MULT      [reduce using rule 82 (m_exp)]
    MULT      [reduce using rule 88 (term)]
    MULT      [reduce using rule 91 (um_term)]
    MULT      [reduce using rule 95 (t_term)]
    MULT      [reduce using rule 98 (var)]
    DIV       reduce using rule 16 (ident)
    DIV       [reduce using rule 77 (exp)]
    DIV       [reduce using rule 82 (m_exp)]
    DIV       [reduce using rule 88 (term)]
    DIV       [reduce using rule 91 (um_term)]
    DIV       [reduce using rule 95 (t_term)]
    DIV       [reduce using rule 98 (var)]
    MOD       reduce using rule 16 (ident)
    MOD       [reduce using rule 77 (exp)]
    MOD       [reduce using rule 82 (m_exp)]
    MOD       [reduce using rule 88 (term)]
    MOD       [reduce using rule 91 (um_term)]
    MOD       [reduce using rule 95 (t_term)]
    MOD       [reduce using rule 98 (var)]
    EQ        reduce using rule 16 (ident)
    EQ        [reduce using rule 77 (exp)]
    EQ        [reduce using rule 82 (m_exp)]
    EQ        [reduce using rule 88 (term)]
    EQ        [reduce using rule 91 (um_term)]
    EQ        [reduce using rule 95 (t_term)]
    EQ        [reduce using rule 98 (var)]
    NEQ       reduce using rule 16 (ident)
    NEQ       [reduce using rule 77 (exp)]
    NEQ       [reduce using rule 82 (m_exp)]
    NEQ       [reduce using rule 88 (term)]
    NEQ       [reduce using rule 91 (um_term)]
    NEQ       [reduce using rule 95 (t_term)]
    NEQ       [reduce using rule 98 (var)]
    LT        reduce using rule 16 (ident)
    LT        [reduce using rule 77 (exp)]
    LT        [reduce using rule 82 (m_exp)]
    LT        [reduce using rule 88 (term)]
    LT        [reduce using rule 91 (um_term)]
    LT        [reduce using rule 95 (t_term)]
    LT        [reduce using rule 98 (var)]
    GT        reduce using rule 16 (ident)
    GT        [reduce using rule 77 (exp)]
    GT        [reduce using rule 82 (m_exp)]
    GT        [reduce using rule 88 (term)]
    GT        [reduce using rule 91 (um_term)]
    GT        [reduce using rule 95 (t_term)]
    GT        [reduce using rule 98 (var)]
    LTE       reduce using rule 16 (ident)
    LTE       [reduce using rule 77 (exp)]
    LTE       [reduce using rule 82 (m_exp)]
    LTE       [reduce using rule 88 (term)]
    LTE       [reduce using rule 91 (um_term)]
    LTE       [reduce using rule 95 (t_term)]
    LTE       [reduce using rule 98 (var)]
    GTE       reduce using rule 16 (ident)
    GTE       [reduce using rule 77 (exp)]
    GTE       [reduce using rule 82 (m_exp)]
    GTE       [reduce using rule 88 (term)]
    GTE       [reduce using rule 91 (um_term)]
    GTE       [reduce using rule 95 (t_term)]
    GTE       [reduce using rule 98 (var)]
    L_PAREN   [reduce using rule 16 (ident)]
    L_PAREN   [reduce using rule 77 (exp)]
    L_PAREN   [reduce using rule 82 (m_exp)]
    L_PAREN   [reduce using rule 88 (term)]
    L_PAREN   [reduce using rule 91 (um_term)]
    L_PAREN   [reduce using rule 95 (t_term)]
    L_PAREN   [reduce using rule 98 (var)]
    R_PAREN   reduce using rule 16 (ident)
    R_PAREN   [reduce using rule 55 (bool_exp)]
    R_PAREN   [reduce using rule 58 (r_and_exp)]
    R_PAREN   [reduce using rule 61 (r_exp)]
    R_PAREN   [reduce using rule 66 (all_b_exp)]
    R_PAREN   [reduce using rule 77 (exp)]
    R_PAREN   [reduce using rule 82 (m_exp)]
    R_PAREN   [reduce using rule 88 (term)]
    R_PAREN   [reduce using rule 91 (um_term)]
    R_PAREN   [reduce using rule 95 (t_term)]
    R_PAREN   [reduce using rule 98 (var)]
    BEG_ARR   reduce using rule 16 (ident)
    BEG_ARR   [reduce using rule 77 (exp)]
    BEG_ARR   [reduce using rule 82 (m_exp)]
    BEG_ARR   [reduce using rule 88 (term)]
    BEG_ARR   [reduce using rule 91 (um_term)]
    BEG_ARR   [reduce using rule 95 (t_term)]
    BEG_ARR   [reduce using rule 98 (var)]
    NUMBER    [reduce using rule 16 (ident)]
    NUMBER    [reduce using rule 77 (exp)]
    NUMBER    [reduce using rule 82 (m_exp)]
    NUMBER    [reduce using rule 88 (term)]
    NUMBER    [reduce using rule 91 (um_term)]
    NUMBER    [reduce using rule 95 (t_term)]
    NUMBER    [reduce using rule 98 (var)]
    IDENT     [reduce using rule 16 (ident)]
    IDENT     [reduce using rule 77 (exp)]
    IDENT     [reduce using rule 82 (m_exp)]
    IDENT     [reduce using rule 88 (term)]
    IDENT     [reduce using rule 91 (um_term)]
    IDENT     [reduce using rule 95 (t_term)]
    IDENT     [reduce using rule 98 (var)]
    $default  reduce using rule 16 (ident)

    ident      go to state 58
    bool_exp   go to state 82
    r_and_exp  go to state 60
    r_exp      go to state 61
    all_b_exp  go to state 62
    exp        go to state 83
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 57

   93 t_term: NUMBER .

    $default  reduce using rule 93 (t_term)


State 58

   86 term: ident . L_PAREN R_PAREN
   87     | ident . L_PAREN c_exp R_PAREN
   96 var: ident .
   97    | ident . BEG_ARR exp END_ARR

    L_PAREN  shift, and go to state 84
    BEG_ARR  shift, and go to state 74

    L_PAREN   [reduce using rule 96 (var)]
    BEG_ARR   [reduce using rule 96 (var)]
    $default  reduce using rule 96 (var)


State 59

   36 if_stmt: IF bool_exp . THEN p_statement SEMICOLON else_stmt END_IF

    THEN  shift, and go to state 85


State 60

   53 bool_exp: r_and_exp .
   54         | r_and_exp . OR bool_exp

    OR  shift, and go to state 86

    $default  reduce using rule 53 (bool_exp)


State 61

   56 r_and_exp: r_exp .
   57          | r_exp . AND r_and_exp

    AND  shift, and go to state 87

    $default  reduce using rule 56 (r_and_exp)


State 62

   59 r_exp: all_b_exp .

    $default  reduce using rule 59 (r_exp)


State 63

   62 all_b_exp: exp . comp exp

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    LTE  shift, and go to state 92
    GTE  shift, and go to state 93

    $default  reduce using rule 73 (comp)

    comp  go to state 94


State 64

   74 exp: m_exp .
   75    | m_exp . PLUS exp
   76    | m_exp . MINUS exp

    MINUS  shift, and go to state 95
    PLUS   shift, and go to state 96

    MINUS     [reduce using rule 74 (exp)]
    PLUS      [reduce using rule 74 (exp)]
    $default  reduce using rule 74 (exp)


State 65

   78 m_exp: term .
   79      | term . MULT m_exp
   80      | term . DIV m_exp
   81      | term . MOD m_exp

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    MULT      [reduce using rule 78 (m_exp)]
    DIV       [reduce using rule 78 (m_exp)]
    MOD       [reduce using rule 78 (m_exp)]
    $default  reduce using rule 78 (m_exp)


State 66

   85 term: um_term .

    $default  reduce using rule 85 (term)


State 67

   90 um_term: t_term .

    $default  reduce using rule 90 (um_term)


State 68

   92 t_term: var .

    $default  reduce using rule 92 (t_term)


State 69

   41 while_stmt: WHILE bool_exp . BEG_LOOP p_statement SEMICOLON END_LOOP

    BEG_LOOP  shift, and go to state 100


State 70

   43 do_while_stmt: DO BEG_LOOP . p_statement SEMICOLON END_LOOP WHILE bool_exp

    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    DO      shift, and go to state 32
    CONT    shift, and go to state 33
    READ    shift, and go to state 34
    WRITE   shift, and go to state 35
    RETURN  shift, and go to state 36
    IDENT   shift, and go to state 4

    SEMICOLON  reduce using rule 35 (assign_stmt)
    SEMICOLON  [reduce using rule 37 (if_stmt)]
    SEMICOLON  [reduce using rule 42 (while_stmt)]
    SEMICOLON  [reduce using rule 44 (do_while_stmt)]
    SEMICOLON  [reduce using rule 46 (read_stmt)]
    SEMICOLON  [reduce using rule 48 (write_stmt)]
    SEMICOLON  [reduce using rule 50 (cont_stmt)]
    SEMICOLON  [reduce using rule 52 (return_stmt)]
    ASSIGN     reduce using rule 16 (ident)
    ASSIGN     [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident          go to state 37
    p_statement    go to state 101
    statement      go to state 40
    assign_stmt    go to state 41
    if_stmt        go to state 42
    while_stmt     go to state 43
    do_while_stmt  go to state 44
    read_stmt      go to state 45
    write_stmt     go to state 46
    cont_stmt      go to state 47
    return_stmt    go to state 48
    var            go to state 49


State 71

   99 c_var: var .
  100      | var . COMMA c_var

    COMMA  shift, and go to state 102

    $default  reduce using rule 99 (c_var)


State 72

   45 read_stmt: READ c_var .

    $default  reduce using rule 45 (read_stmt)


State 73

   47 write_stmt: WRITE c_var .

    $default  reduce using rule 47 (write_stmt)


State 74

   97 var: ident BEG_ARR . exp END_ARR

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    MINUS     [reduce using rule 16 (ident)]
    MINUS     [reduce using rule 82 (m_exp)]
    MINUS     [reduce using rule 88 (term)]
    MINUS     [reduce using rule 91 (um_term)]
    MINUS     [reduce using rule 95 (t_term)]
    MINUS     [reduce using rule 98 (var)]
    PLUS      reduce using rule 16 (ident)
    PLUS      [reduce using rule 82 (m_exp)]
    PLUS      [reduce using rule 88 (term)]
    PLUS      [reduce using rule 91 (um_term)]
    PLUS      [reduce using rule 95 (t_term)]
    PLUS      [reduce using rule 98 (var)]
    MULT      reduce using rule 16 (ident)
    MULT      [reduce using rule 88 (term)]
    MULT      [reduce using rule 91 (um_term)]
    MULT      [reduce using rule 95 (t_term)]
    MULT      [reduce using rule 98 (var)]
    DIV       reduce using rule 16 (ident)
    DIV       [reduce using rule 88 (term)]
    DIV       [reduce using rule 91 (um_term)]
    DIV       [reduce using rule 95 (t_term)]
    DIV       [reduce using rule 98 (var)]
    MOD       reduce using rule 16 (ident)
    MOD       [reduce using rule 88 (term)]
    MOD       [reduce using rule 91 (um_term)]
    MOD       [reduce using rule 95 (t_term)]
    MOD       [reduce using rule 98 (var)]
    L_PAREN   [reduce using rule 16 (ident)]
    END_ARR   reduce using rule 16 (ident)
    END_ARR   [reduce using rule 77 (exp)]
    END_ARR   [reduce using rule 82 (m_exp)]
    END_ARR   [reduce using rule 88 (term)]
    END_ARR   [reduce using rule 91 (um_term)]
    END_ARR   [reduce using rule 95 (t_term)]
    END_ARR   [reduce using rule 98 (var)]
    $default  reduce using rule 16 (ident)

    ident    go to state 58
    exp      go to state 103
    m_exp    go to state 64
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 75

    9 body: BEG_BOD s_statement END_BOD .

    $default  reduce using rule 9 (body)


State 76

   24 p_statement: statement SEMICOLON .
   25            | statement SEMICOLON . p_statement

    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    DO      shift, and go to state 32
    CONT    shift, and go to state 33
    READ    shift, and go to state 34
    WRITE   shift, and go to state 35
    RETURN  shift, and go to state 36
    IDENT   shift, and go to state 4

    END_BOD    reduce using rule 24 (p_statement)
    SEMICOLON  reduce using rule 24 (p_statement)
    SEMICOLON  [reduce using rule 35 (assign_stmt)]
    SEMICOLON  [reduce using rule 37 (if_stmt)]
    SEMICOLON  [reduce using rule 42 (while_stmt)]
    SEMICOLON  [reduce using rule 44 (do_while_stmt)]
    SEMICOLON  [reduce using rule 46 (read_stmt)]
    SEMICOLON  [reduce using rule 48 (write_stmt)]
    SEMICOLON  [reduce using rule 50 (cont_stmt)]
    SEMICOLON  [reduce using rule 52 (return_stmt)]
    ASSIGN     reduce using rule 16 (ident)
    ASSIGN     [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident          go to state 37
    p_statement    go to state 104
    statement      go to state 40
    assign_stmt    go to state 41
    if_stmt        go to state 42
    while_stmt     go to state 43
    do_while_stmt  go to state 44
    read_stmt      go to state 45
    write_stmt     go to state 46
    cont_stmt      go to state 47
    return_stmt    go to state 48
    var            go to state 49


State 77

   34 assign_stmt: var ASSIGN . exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    MINUS      [reduce using rule 16 (ident)]
    MINUS      [reduce using rule 82 (m_exp)]
    MINUS      [reduce using rule 88 (term)]
    MINUS      [reduce using rule 91 (um_term)]
    MINUS      [reduce using rule 95 (t_term)]
    MINUS      [reduce using rule 98 (var)]
    PLUS       reduce using rule 16 (ident)
    PLUS       [reduce using rule 82 (m_exp)]
    PLUS       [reduce using rule 88 (term)]
    PLUS       [reduce using rule 91 (um_term)]
    PLUS       [reduce using rule 95 (t_term)]
    PLUS       [reduce using rule 98 (var)]
    MULT       reduce using rule 16 (ident)
    MULT       [reduce using rule 88 (term)]
    MULT       [reduce using rule 91 (um_term)]
    MULT       [reduce using rule 95 (t_term)]
    MULT       [reduce using rule 98 (var)]
    DIV        reduce using rule 16 (ident)
    DIV        [reduce using rule 88 (term)]
    DIV        [reduce using rule 91 (um_term)]
    DIV        [reduce using rule 95 (t_term)]
    DIV        [reduce using rule 98 (var)]
    MOD        reduce using rule 16 (ident)
    MOD        [reduce using rule 88 (term)]
    MOD        [reduce using rule 91 (um_term)]
    MOD        [reduce using rule 95 (t_term)]
    MOD        [reduce using rule 98 (var)]
    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 77 (exp)]
    SEMICOLON  [reduce using rule 82 (m_exp)]
    SEMICOLON  [reduce using rule 88 (term)]
    SEMICOLON  [reduce using rule 91 (um_term)]
    SEMICOLON  [reduce using rule 95 (t_term)]
    SEMICOLON  [reduce using rule 98 (var)]
    L_PAREN    [reduce using rule 16 (ident)]
    $default   reduce using rule 16 (ident)

    ident    go to state 58
    exp      go to state 105
    m_exp    go to state 64
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 78

   21 array: ARR BEG_ARR NUMBER . END_ARR OF

    END_ARR  shift, and go to state 106


State 79

   60 r_exp: NOT all_b_exp .

    $default  reduce using rule 60 (r_exp)


State 80

   94 t_term: L_PAREN . exp R_PAREN

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    MINUS     [reduce using rule 16 (ident)]
    MINUS     [reduce using rule 82 (m_exp)]
    MINUS     [reduce using rule 88 (term)]
    MINUS     [reduce using rule 91 (um_term)]
    MINUS     [reduce using rule 95 (t_term)]
    MINUS     [reduce using rule 98 (var)]
    PLUS      reduce using rule 16 (ident)
    PLUS      [reduce using rule 82 (m_exp)]
    PLUS      [reduce using rule 88 (term)]
    PLUS      [reduce using rule 91 (um_term)]
    PLUS      [reduce using rule 95 (t_term)]
    PLUS      [reduce using rule 98 (var)]
    MULT      reduce using rule 16 (ident)
    MULT      [reduce using rule 88 (term)]
    MULT      [reduce using rule 91 (um_term)]
    MULT      [reduce using rule 95 (t_term)]
    MULT      [reduce using rule 98 (var)]
    DIV       reduce using rule 16 (ident)
    DIV       [reduce using rule 88 (term)]
    DIV       [reduce using rule 91 (um_term)]
    DIV       [reduce using rule 95 (t_term)]
    DIV       [reduce using rule 98 (var)]
    MOD       reduce using rule 16 (ident)
    MOD       [reduce using rule 88 (term)]
    MOD       [reduce using rule 91 (um_term)]
    MOD       [reduce using rule 95 (t_term)]
    MOD       [reduce using rule 98 (var)]
    L_PAREN   [reduce using rule 16 (ident)]
    R_PAREN   reduce using rule 16 (ident)
    R_PAREN   [reduce using rule 77 (exp)]
    R_PAREN   [reduce using rule 82 (m_exp)]
    R_PAREN   [reduce using rule 88 (term)]
    R_PAREN   [reduce using rule 91 (um_term)]
    R_PAREN   [reduce using rule 95 (t_term)]
    R_PAREN   [reduce using rule 98 (var)]
    $default  reduce using rule 16 (ident)

    ident    go to state 58
    exp      go to state 107
    m_exp    go to state 64
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 81

   89 um_term: MINUS t_term .

    $default  reduce using rule 89 (um_term)


State 82

   65 all_b_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 108


State 83

   62 all_b_exp: exp . comp exp
   94 t_term: L_PAREN exp . R_PAREN

    EQ       shift, and go to state 88
    NEQ      shift, and go to state 89
    LT       shift, and go to state 90
    GT       shift, and go to state 91
    LTE      shift, and go to state 92
    GTE      shift, and go to state 93
    R_PAREN  shift, and go to state 109

    R_PAREN   [reduce using rule 73 (comp)]
    $default  reduce using rule 73 (comp)

    comp  go to state 94


State 84

   86 term: ident L_PAREN . R_PAREN
   87     | ident L_PAREN . c_exp R_PAREN

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 80
    R_PAREN  shift, and go to state 110
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    MINUS     [reduce using rule 16 (ident)]
    MINUS     [reduce using rule 82 (m_exp)]
    MINUS     [reduce using rule 88 (term)]
    MINUS     [reduce using rule 91 (um_term)]
    MINUS     [reduce using rule 95 (t_term)]
    MINUS     [reduce using rule 98 (var)]
    PLUS      reduce using rule 16 (ident)
    PLUS      [reduce using rule 82 (m_exp)]
    PLUS      [reduce using rule 88 (term)]
    PLUS      [reduce using rule 91 (um_term)]
    PLUS      [reduce using rule 95 (t_term)]
    PLUS      [reduce using rule 98 (var)]
    MULT      reduce using rule 16 (ident)
    MULT      [reduce using rule 88 (term)]
    MULT      [reduce using rule 91 (um_term)]
    MULT      [reduce using rule 95 (t_term)]
    MULT      [reduce using rule 98 (var)]
    DIV       reduce using rule 16 (ident)
    DIV       [reduce using rule 88 (term)]
    DIV       [reduce using rule 91 (um_term)]
    DIV       [reduce using rule 95 (t_term)]
    DIV       [reduce using rule 98 (var)]
    MOD       reduce using rule 16 (ident)
    MOD       [reduce using rule 88 (term)]
    MOD       [reduce using rule 91 (um_term)]
    MOD       [reduce using rule 95 (t_term)]
    MOD       [reduce using rule 98 (var)]
    COMMA     reduce using rule 16 (ident)
    COMMA     [reduce using rule 77 (exp)]
    COMMA     [reduce using rule 82 (m_exp)]
    COMMA     [reduce using rule 88 (term)]
    COMMA     [reduce using rule 91 (um_term)]
    COMMA     [reduce using rule 95 (t_term)]
    COMMA     [reduce using rule 98 (var)]
    L_PAREN   [reduce using rule 16 (ident)]
    R_PAREN   [reduce using rule 16 (ident)]
    R_PAREN   [reduce using rule 77 (exp)]
    R_PAREN   [reduce using rule 82 (m_exp)]
    R_PAREN   [reduce using rule 88 (term)]
    R_PAREN   [reduce using rule 91 (um_term)]
    R_PAREN   [reduce using rule 95 (t_term)]
    R_PAREN   [reduce using rule 98 (var)]
    $default  reduce using rule 16 (ident)

    ident    go to state 58
    exp      go to state 111
    m_exp    go to state 64
    c_exp    go to state 112
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 85

   36 if_stmt: IF bool_exp THEN . p_statement SEMICOLON else_stmt END_IF

    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    DO      shift, and go to state 32
    CONT    shift, and go to state 33
    READ    shift, and go to state 34
    WRITE   shift, and go to state 35
    RETURN  shift, and go to state 36
    IDENT   shift, and go to state 4

    SEMICOLON  reduce using rule 35 (assign_stmt)
    SEMICOLON  [reduce using rule 37 (if_stmt)]
    SEMICOLON  [reduce using rule 42 (while_stmt)]
    SEMICOLON  [reduce using rule 44 (do_while_stmt)]
    SEMICOLON  [reduce using rule 46 (read_stmt)]
    SEMICOLON  [reduce using rule 48 (write_stmt)]
    SEMICOLON  [reduce using rule 50 (cont_stmt)]
    SEMICOLON  [reduce using rule 52 (return_stmt)]
    ASSIGN     reduce using rule 16 (ident)
    ASSIGN     [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident          go to state 37
    p_statement    go to state 113
    statement      go to state 40
    assign_stmt    go to state 41
    if_stmt        go to state 42
    while_stmt     go to state 43
    do_while_stmt  go to state 44
    read_stmt      go to state 45
    write_stmt     go to state 46
    cont_stmt      go to state 47
    return_stmt    go to state 48
    var            go to state 49


State 86

   54 bool_exp: r_and_exp OR . bool_exp

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    THEN       reduce using rule 16 (ident)
    THEN       [reduce using rule 55 (bool_exp)]
    THEN       [reduce using rule 58 (r_and_exp)]
    THEN       [reduce using rule 61 (r_exp)]
    THEN       [reduce using rule 66 (all_b_exp)]
    THEN       [reduce using rule 77 (exp)]
    THEN       [reduce using rule 82 (m_exp)]
    THEN       [reduce using rule 88 (term)]
    THEN       [reduce using rule 91 (um_term)]
    THEN       [reduce using rule 95 (t_term)]
    THEN       [reduce using rule 98 (var)]
    BEG_LOOP   reduce using rule 16 (ident)
    BEG_LOOP   [reduce using rule 55 (bool_exp)]
    BEG_LOOP   [reduce using rule 58 (r_and_exp)]
    BEG_LOOP   [reduce using rule 61 (r_exp)]
    BEG_LOOP   [reduce using rule 66 (all_b_exp)]
    BEG_LOOP   [reduce using rule 77 (exp)]
    BEG_LOOP   [reduce using rule 82 (m_exp)]
    BEG_LOOP   [reduce using rule 88 (term)]
    BEG_LOOP   [reduce using rule 91 (um_term)]
    BEG_LOOP   [reduce using rule 95 (t_term)]
    BEG_LOOP   [reduce using rule 98 (var)]
    AND        reduce using rule 16 (ident)
    AND        [reduce using rule 61 (r_exp)]
    AND        [reduce using rule 66 (all_b_exp)]
    AND        [reduce using rule 77 (exp)]
    AND        [reduce using rule 82 (m_exp)]
    AND        [reduce using rule 88 (term)]
    AND        [reduce using rule 91 (um_term)]
    AND        [reduce using rule 95 (t_term)]
    AND        [reduce using rule 98 (var)]
    OR         reduce using rule 16 (ident)
    OR         [reduce using rule 58 (r_and_exp)]
    OR         [reduce using rule 61 (r_exp)]
    OR         [reduce using rule 66 (all_b_exp)]
    OR         [reduce using rule 77 (exp)]
    OR         [reduce using rule 82 (m_exp)]
    OR         [reduce using rule 88 (term)]
    OR         [reduce using rule 91 (um_term)]
    OR         [reduce using rule 95 (t_term)]
    OR         [reduce using rule 98 (var)]
    MINUS      [reduce using rule 16 (ident)]
    MINUS      [reduce using rule 77 (exp)]
    MINUS      [reduce using rule 82 (m_exp)]
    MINUS      [reduce using rule 88 (term)]
    MINUS      [reduce using rule 91 (um_term)]
    MINUS      [reduce using rule 95 (t_term)]
    MINUS      [reduce using rule 98 (var)]
    PLUS       reduce using rule 16 (ident)
    PLUS       [reduce using rule 77 (exp)]
    PLUS       [reduce using rule 82 (m_exp)]
    PLUS       [reduce using rule 88 (term)]
    PLUS       [reduce using rule 91 (um_term)]
    PLUS       [reduce using rule 95 (t_term)]
    PLUS       [reduce using rule 98 (var)]
    MULT       reduce using rule 16 (ident)
    MULT       [reduce using rule 77 (exp)]
    MULT       [reduce using rule 82 (m_exp)]
    MULT       [reduce using rule 88 (term)]
    MULT       [reduce using rule 91 (um_term)]
    MULT       [reduce using rule 95 (t_term)]
    MULT       [reduce using rule 98 (var)]
    DIV        reduce using rule 16 (ident)
    DIV        [reduce using rule 77 (exp)]
    DIV        [reduce using rule 82 (m_exp)]
    DIV        [reduce using rule 88 (term)]
    DIV        [reduce using rule 91 (um_term)]
    DIV        [reduce using rule 95 (t_term)]
    DIV        [reduce using rule 98 (var)]
    MOD        reduce using rule 16 (ident)
    MOD        [reduce using rule 77 (exp)]
    MOD        [reduce using rule 82 (m_exp)]
    MOD        [reduce using rule 88 (term)]
    MOD        [reduce using rule 91 (um_term)]
    MOD        [reduce using rule 95 (t_term)]
    MOD        [reduce using rule 98 (var)]
    EQ         reduce using rule 16 (ident)
    EQ         [reduce using rule 77 (exp)]
    EQ         [reduce using rule 82 (m_exp)]
    EQ         [reduce using rule 88 (term)]
    EQ         [reduce using rule 91 (um_term)]
    EQ         [reduce using rule 95 (t_term)]
    EQ         [reduce using rule 98 (var)]
    NEQ        reduce using rule 16 (ident)
    NEQ        [reduce using rule 77 (exp)]
    NEQ        [reduce using rule 82 (m_exp)]
    NEQ        [reduce using rule 88 (term)]
    NEQ        [reduce using rule 91 (um_term)]
    NEQ        [reduce using rule 95 (t_term)]
    NEQ        [reduce using rule 98 (var)]
    LT         reduce using rule 16 (ident)
    LT         [reduce using rule 77 (exp)]
    LT         [reduce using rule 82 (m_exp)]
    LT         [reduce using rule 88 (term)]
    LT         [reduce using rule 91 (um_term)]
    LT         [reduce using rule 95 (t_term)]
    LT         [reduce using rule 98 (var)]
    GT         reduce using rule 16 (ident)
    GT         [reduce using rule 77 (exp)]
    GT         [reduce using rule 82 (m_exp)]
    GT         [reduce using rule 88 (term)]
    GT         [reduce using rule 91 (um_term)]
    GT         [reduce using rule 95 (t_term)]
    GT         [reduce using rule 98 (var)]
    LTE        reduce using rule 16 (ident)
    LTE        [reduce using rule 77 (exp)]
    LTE        [reduce using rule 82 (m_exp)]
    LTE        [reduce using rule 88 (term)]
    LTE        [reduce using rule 91 (um_term)]
    LTE        [reduce using rule 95 (t_term)]
    LTE        [reduce using rule 98 (var)]
    GTE        reduce using rule 16 (ident)
    GTE        [reduce using rule 77 (exp)]
    GTE        [reduce using rule 82 (m_exp)]
    GTE        [reduce using rule 88 (term)]
    GTE        [reduce using rule 91 (um_term)]
    GTE        [reduce using rule 95 (t_term)]
    GTE        [reduce using rule 98 (var)]
    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 55 (bool_exp)]
    SEMICOLON  [reduce using rule 58 (r_and_exp)]
    SEMICOLON  [reduce using rule 61 (r_exp)]
    SEMICOLON  [reduce using rule 66 (all_b_exp)]
    SEMICOLON  [reduce using rule 77 (exp)]
    SEMICOLON  [reduce using rule 82 (m_exp)]
    SEMICOLON  [reduce using rule 88 (term)]
    SEMICOLON  [reduce using rule 91 (um_term)]
    SEMICOLON  [reduce using rule 95 (t_term)]
    SEMICOLON  [reduce using rule 98 (var)]
    L_PAREN    [reduce using rule 16 (ident)]
    L_PAREN    [reduce using rule 77 (exp)]
    L_PAREN    [reduce using rule 82 (m_exp)]
    L_PAREN    [reduce using rule 88 (term)]
    L_PAREN    [reduce using rule 91 (um_term)]
    L_PAREN    [reduce using rule 95 (t_term)]
    L_PAREN    [reduce using rule 98 (var)]
    R_PAREN    reduce using rule 16 (ident)
    R_PAREN    [reduce using rule 55 (bool_exp)]
    R_PAREN    [reduce using rule 58 (r_and_exp)]
    R_PAREN    [reduce using rule 61 (r_exp)]
    R_PAREN    [reduce using rule 66 (all_b_exp)]
    R_PAREN    [reduce using rule 77 (exp)]
    R_PAREN    [reduce using rule 82 (m_exp)]
    R_PAREN    [reduce using rule 88 (term)]
    R_PAREN    [reduce using rule 91 (um_term)]
    R_PAREN    [reduce using rule 95 (t_term)]
    R_PAREN    [reduce using rule 98 (var)]
    BEG_ARR    reduce using rule 16 (ident)
    BEG_ARR    [reduce using rule 77 (exp)]
    BEG_ARR    [reduce using rule 82 (m_exp)]
    BEG_ARR    [reduce using rule 88 (term)]
    BEG_ARR    [reduce using rule 91 (um_term)]
    BEG_ARR    [reduce using rule 95 (t_term)]
    BEG_ARR    [reduce using rule 98 (var)]
    NUMBER     [reduce using rule 16 (ident)]
    NUMBER     [reduce using rule 77 (exp)]
    NUMBER     [reduce using rule 82 (m_exp)]
    NUMBER     [reduce using rule 88 (term)]
    NUMBER     [reduce using rule 91 (um_term)]
    NUMBER     [reduce using rule 95 (t_term)]
    NUMBER     [reduce using rule 98 (var)]
    IDENT      [reduce using rule 16 (ident)]
    IDENT      [reduce using rule 77 (exp)]
    IDENT      [reduce using rule 82 (m_exp)]
    IDENT      [reduce using rule 88 (term)]
    IDENT      [reduce using rule 91 (um_term)]
    IDENT      [reduce using rule 95 (t_term)]
    IDENT      [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident      go to state 58
    bool_exp   go to state 114
    r_and_exp  go to state 60
    r_exp      go to state 61
    all_b_exp  go to state 62
    exp        go to state 63
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 87

   57 r_and_exp: r_exp AND . r_and_exp

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    THEN       reduce using rule 16 (ident)
    THEN       [reduce using rule 58 (r_and_exp)]
    THEN       [reduce using rule 61 (r_exp)]
    THEN       [reduce using rule 66 (all_b_exp)]
    THEN       [reduce using rule 77 (exp)]
    THEN       [reduce using rule 82 (m_exp)]
    THEN       [reduce using rule 88 (term)]
    THEN       [reduce using rule 91 (um_term)]
    THEN       [reduce using rule 95 (t_term)]
    THEN       [reduce using rule 98 (var)]
    BEG_LOOP   reduce using rule 16 (ident)
    BEG_LOOP   [reduce using rule 58 (r_and_exp)]
    BEG_LOOP   [reduce using rule 61 (r_exp)]
    BEG_LOOP   [reduce using rule 66 (all_b_exp)]
    BEG_LOOP   [reduce using rule 77 (exp)]
    BEG_LOOP   [reduce using rule 82 (m_exp)]
    BEG_LOOP   [reduce using rule 88 (term)]
    BEG_LOOP   [reduce using rule 91 (um_term)]
    BEG_LOOP   [reduce using rule 95 (t_term)]
    BEG_LOOP   [reduce using rule 98 (var)]
    AND        reduce using rule 16 (ident)
    AND        [reduce using rule 61 (r_exp)]
    AND        [reduce using rule 66 (all_b_exp)]
    AND        [reduce using rule 77 (exp)]
    AND        [reduce using rule 82 (m_exp)]
    AND        [reduce using rule 88 (term)]
    AND        [reduce using rule 91 (um_term)]
    AND        [reduce using rule 95 (t_term)]
    AND        [reduce using rule 98 (var)]
    OR         reduce using rule 16 (ident)
    OR         [reduce using rule 58 (r_and_exp)]
    OR         [reduce using rule 61 (r_exp)]
    OR         [reduce using rule 66 (all_b_exp)]
    OR         [reduce using rule 77 (exp)]
    OR         [reduce using rule 82 (m_exp)]
    OR         [reduce using rule 88 (term)]
    OR         [reduce using rule 91 (um_term)]
    OR         [reduce using rule 95 (t_term)]
    OR         [reduce using rule 98 (var)]
    MINUS      [reduce using rule 16 (ident)]
    MINUS      [reduce using rule 77 (exp)]
    MINUS      [reduce using rule 82 (m_exp)]
    MINUS      [reduce using rule 88 (term)]
    MINUS      [reduce using rule 91 (um_term)]
    MINUS      [reduce using rule 95 (t_term)]
    MINUS      [reduce using rule 98 (var)]
    PLUS       reduce using rule 16 (ident)
    PLUS       [reduce using rule 77 (exp)]
    PLUS       [reduce using rule 82 (m_exp)]
    PLUS       [reduce using rule 88 (term)]
    PLUS       [reduce using rule 91 (um_term)]
    PLUS       [reduce using rule 95 (t_term)]
    PLUS       [reduce using rule 98 (var)]
    MULT       reduce using rule 16 (ident)
    MULT       [reduce using rule 77 (exp)]
    MULT       [reduce using rule 82 (m_exp)]
    MULT       [reduce using rule 88 (term)]
    MULT       [reduce using rule 91 (um_term)]
    MULT       [reduce using rule 95 (t_term)]
    MULT       [reduce using rule 98 (var)]
    DIV        reduce using rule 16 (ident)
    DIV        [reduce using rule 77 (exp)]
    DIV        [reduce using rule 82 (m_exp)]
    DIV        [reduce using rule 88 (term)]
    DIV        [reduce using rule 91 (um_term)]
    DIV        [reduce using rule 95 (t_term)]
    DIV        [reduce using rule 98 (var)]
    MOD        reduce using rule 16 (ident)
    MOD        [reduce using rule 77 (exp)]
    MOD        [reduce using rule 82 (m_exp)]
    MOD        [reduce using rule 88 (term)]
    MOD        [reduce using rule 91 (um_term)]
    MOD        [reduce using rule 95 (t_term)]
    MOD        [reduce using rule 98 (var)]
    EQ         reduce using rule 16 (ident)
    EQ         [reduce using rule 77 (exp)]
    EQ         [reduce using rule 82 (m_exp)]
    EQ         [reduce using rule 88 (term)]
    EQ         [reduce using rule 91 (um_term)]
    EQ         [reduce using rule 95 (t_term)]
    EQ         [reduce using rule 98 (var)]
    NEQ        reduce using rule 16 (ident)
    NEQ        [reduce using rule 77 (exp)]
    NEQ        [reduce using rule 82 (m_exp)]
    NEQ        [reduce using rule 88 (term)]
    NEQ        [reduce using rule 91 (um_term)]
    NEQ        [reduce using rule 95 (t_term)]
    NEQ        [reduce using rule 98 (var)]
    LT         reduce using rule 16 (ident)
    LT         [reduce using rule 77 (exp)]
    LT         [reduce using rule 82 (m_exp)]
    LT         [reduce using rule 88 (term)]
    LT         [reduce using rule 91 (um_term)]
    LT         [reduce using rule 95 (t_term)]
    LT         [reduce using rule 98 (var)]
    GT         reduce using rule 16 (ident)
    GT         [reduce using rule 77 (exp)]
    GT         [reduce using rule 82 (m_exp)]
    GT         [reduce using rule 88 (term)]
    GT         [reduce using rule 91 (um_term)]
    GT         [reduce using rule 95 (t_term)]
    GT         [reduce using rule 98 (var)]
    LTE        reduce using rule 16 (ident)
    LTE        [reduce using rule 77 (exp)]
    LTE        [reduce using rule 82 (m_exp)]
    LTE        [reduce using rule 88 (term)]
    LTE        [reduce using rule 91 (um_term)]
    LTE        [reduce using rule 95 (t_term)]
    LTE        [reduce using rule 98 (var)]
    GTE        reduce using rule 16 (ident)
    GTE        [reduce using rule 77 (exp)]
    GTE        [reduce using rule 82 (m_exp)]
    GTE        [reduce using rule 88 (term)]
    GTE        [reduce using rule 91 (um_term)]
    GTE        [reduce using rule 95 (t_term)]
    GTE        [reduce using rule 98 (var)]
    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 58 (r_and_exp)]
    SEMICOLON  [reduce using rule 61 (r_exp)]
    SEMICOLON  [reduce using rule 66 (all_b_exp)]
    SEMICOLON  [reduce using rule 77 (exp)]
    SEMICOLON  [reduce using rule 82 (m_exp)]
    SEMICOLON  [reduce using rule 88 (term)]
    SEMICOLON  [reduce using rule 91 (um_term)]
    SEMICOLON  [reduce using rule 95 (t_term)]
    SEMICOLON  [reduce using rule 98 (var)]
    L_PAREN    [reduce using rule 16 (ident)]
    L_PAREN    [reduce using rule 77 (exp)]
    L_PAREN    [reduce using rule 82 (m_exp)]
    L_PAREN    [reduce using rule 88 (term)]
    L_PAREN    [reduce using rule 91 (um_term)]
    L_PAREN    [reduce using rule 95 (t_term)]
    L_PAREN    [reduce using rule 98 (var)]
    R_PAREN    reduce using rule 16 (ident)
    R_PAREN    [reduce using rule 58 (r_and_exp)]
    R_PAREN    [reduce using rule 61 (r_exp)]
    R_PAREN    [reduce using rule 66 (all_b_exp)]
    R_PAREN    [reduce using rule 77 (exp)]
    R_PAREN    [reduce using rule 82 (m_exp)]
    R_PAREN    [reduce using rule 88 (term)]
    R_PAREN    [reduce using rule 91 (um_term)]
    R_PAREN    [reduce using rule 95 (t_term)]
    R_PAREN    [reduce using rule 98 (var)]
    BEG_ARR    reduce using rule 16 (ident)
    BEG_ARR    [reduce using rule 77 (exp)]
    BEG_ARR    [reduce using rule 82 (m_exp)]
    BEG_ARR    [reduce using rule 88 (term)]
    BEG_ARR    [reduce using rule 91 (um_term)]
    BEG_ARR    [reduce using rule 95 (t_term)]
    BEG_ARR    [reduce using rule 98 (var)]
    NUMBER     [reduce using rule 16 (ident)]
    NUMBER     [reduce using rule 77 (exp)]
    NUMBER     [reduce using rule 82 (m_exp)]
    NUMBER     [reduce using rule 88 (term)]
    NUMBER     [reduce using rule 91 (um_term)]
    NUMBER     [reduce using rule 95 (t_term)]
    NUMBER     [reduce using rule 98 (var)]
    IDENT      [reduce using rule 16 (ident)]
    IDENT      [reduce using rule 77 (exp)]
    IDENT      [reduce using rule 82 (m_exp)]
    IDENT      [reduce using rule 88 (term)]
    IDENT      [reduce using rule 91 (um_term)]
    IDENT      [reduce using rule 95 (t_term)]
    IDENT      [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident      go to state 58
    r_and_exp  go to state 115
    r_exp      go to state 61
    all_b_exp  go to state 62
    exp        go to state 63
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 88

   67 comp: EQ .

    $default  reduce using rule 67 (comp)


State 89

   68 comp: NEQ .

    $default  reduce using rule 68 (comp)


State 90

   69 comp: LT .

    $default  reduce using rule 69 (comp)


State 91

   70 comp: GT .

    $default  reduce using rule 70 (comp)


State 92

   71 comp: LTE .

    $default  reduce using rule 71 (comp)


State 93

   72 comp: GTE .

    $default  reduce using rule 72 (comp)


State 94

   62 all_b_exp: exp comp . exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    THEN       reduce using rule 16 (ident)
    THEN       [reduce using rule 77 (exp)]
    THEN       [reduce using rule 82 (m_exp)]
    THEN       [reduce using rule 88 (term)]
    THEN       [reduce using rule 91 (um_term)]
    THEN       [reduce using rule 95 (t_term)]
    THEN       [reduce using rule 98 (var)]
    BEG_LOOP   reduce using rule 16 (ident)
    BEG_LOOP   [reduce using rule 77 (exp)]
    BEG_LOOP   [reduce using rule 82 (m_exp)]
    BEG_LOOP   [reduce using rule 88 (term)]
    BEG_LOOP   [reduce using rule 91 (um_term)]
    BEG_LOOP   [reduce using rule 95 (t_term)]
    BEG_LOOP   [reduce using rule 98 (var)]
    AND        reduce using rule 16 (ident)
    AND        [reduce using rule 77 (exp)]
    AND        [reduce using rule 82 (m_exp)]
    AND        [reduce using rule 88 (term)]
    AND        [reduce using rule 91 (um_term)]
    AND        [reduce using rule 95 (t_term)]
    AND        [reduce using rule 98 (var)]
    OR         reduce using rule 16 (ident)
    OR         [reduce using rule 77 (exp)]
    OR         [reduce using rule 82 (m_exp)]
    OR         [reduce using rule 88 (term)]
    OR         [reduce using rule 91 (um_term)]
    OR         [reduce using rule 95 (t_term)]
    OR         [reduce using rule 98 (var)]
    MINUS      [reduce using rule 16 (ident)]
    MINUS      [reduce using rule 82 (m_exp)]
    MINUS      [reduce using rule 88 (term)]
    MINUS      [reduce using rule 91 (um_term)]
    MINUS      [reduce using rule 95 (t_term)]
    MINUS      [reduce using rule 98 (var)]
    PLUS       reduce using rule 16 (ident)
    PLUS       [reduce using rule 82 (m_exp)]
    PLUS       [reduce using rule 88 (term)]
    PLUS       [reduce using rule 91 (um_term)]
    PLUS       [reduce using rule 95 (t_term)]
    PLUS       [reduce using rule 98 (var)]
    MULT       reduce using rule 16 (ident)
    MULT       [reduce using rule 88 (term)]
    MULT       [reduce using rule 91 (um_term)]
    MULT       [reduce using rule 95 (t_term)]
    MULT       [reduce using rule 98 (var)]
    DIV        reduce using rule 16 (ident)
    DIV        [reduce using rule 88 (term)]
    DIV        [reduce using rule 91 (um_term)]
    DIV        [reduce using rule 95 (t_term)]
    DIV        [reduce using rule 98 (var)]
    MOD        reduce using rule 16 (ident)
    MOD        [reduce using rule 88 (term)]
    MOD        [reduce using rule 91 (um_term)]
    MOD        [reduce using rule 95 (t_term)]
    MOD        [reduce using rule 98 (var)]
    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 77 (exp)]
    SEMICOLON  [reduce using rule 82 (m_exp)]
    SEMICOLON  [reduce using rule 88 (term)]
    SEMICOLON  [reduce using rule 91 (um_term)]
    SEMICOLON  [reduce using rule 95 (t_term)]
    SEMICOLON  [reduce using rule 98 (var)]
    L_PAREN    [reduce using rule 16 (ident)]
    R_PAREN    reduce using rule 16 (ident)
    R_PAREN    [reduce using rule 77 (exp)]
    R_PAREN    [reduce using rule 82 (m_exp)]
    R_PAREN    [reduce using rule 88 (term)]
    R_PAREN    [reduce using rule 91 (um_term)]
    R_PAREN    [reduce using rule 95 (t_term)]
    R_PAREN    [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident    go to state 58
    exp      go to state 116
    m_exp    go to state 64
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 95

   76 exp: m_exp MINUS . exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    THEN       reduce using rule 16 (ident)
    THEN       [reduce using rule 77 (exp)]
    THEN       [reduce using rule 82 (m_exp)]
    THEN       [reduce using rule 88 (term)]
    THEN       [reduce using rule 91 (um_term)]
    THEN       [reduce using rule 95 (t_term)]
    THEN       [reduce using rule 98 (var)]
    BEG_LOOP   reduce using rule 16 (ident)
    BEG_LOOP   [reduce using rule 77 (exp)]
    BEG_LOOP   [reduce using rule 82 (m_exp)]
    BEG_LOOP   [reduce using rule 88 (term)]
    BEG_LOOP   [reduce using rule 91 (um_term)]
    BEG_LOOP   [reduce using rule 95 (t_term)]
    BEG_LOOP   [reduce using rule 98 (var)]
    AND        reduce using rule 16 (ident)
    AND        [reduce using rule 77 (exp)]
    AND        [reduce using rule 82 (m_exp)]
    AND        [reduce using rule 88 (term)]
    AND        [reduce using rule 91 (um_term)]
    AND        [reduce using rule 95 (t_term)]
    AND        [reduce using rule 98 (var)]
    OR         reduce using rule 16 (ident)
    OR         [reduce using rule 77 (exp)]
    OR         [reduce using rule 82 (m_exp)]
    OR         [reduce using rule 88 (term)]
    OR         [reduce using rule 91 (um_term)]
    OR         [reduce using rule 95 (t_term)]
    OR         [reduce using rule 98 (var)]
    MINUS      [reduce using rule 16 (ident)]
    MINUS      [reduce using rule 77 (exp)]
    MINUS      [reduce using rule 82 (m_exp)]
    MINUS      [reduce using rule 88 (term)]
    MINUS      [reduce using rule 91 (um_term)]
    MINUS      [reduce using rule 95 (t_term)]
    MINUS      [reduce using rule 98 (var)]
    PLUS       reduce using rule 16 (ident)
    PLUS       [reduce using rule 77 (exp)]
    PLUS       [reduce using rule 82 (m_exp)]
    PLUS       [reduce using rule 88 (term)]
    PLUS       [reduce using rule 91 (um_term)]
    PLUS       [reduce using rule 95 (t_term)]
    PLUS       [reduce using rule 98 (var)]
    MULT       reduce using rule 16 (ident)
    MULT       [reduce using rule 77 (exp)]
    MULT       [reduce using rule 82 (m_exp)]
    MULT       [reduce using rule 88 (term)]
    MULT       [reduce using rule 91 (um_term)]
    MULT       [reduce using rule 95 (t_term)]
    MULT       [reduce using rule 98 (var)]
    DIV        reduce using rule 16 (ident)
    DIV        [reduce using rule 77 (exp)]
    DIV        [reduce using rule 82 (m_exp)]
    DIV        [reduce using rule 88 (term)]
    DIV        [reduce using rule 91 (um_term)]
    DIV        [reduce using rule 95 (t_term)]
    DIV        [reduce using rule 98 (var)]
    MOD        reduce using rule 16 (ident)
    MOD        [reduce using rule 77 (exp)]
    MOD        [reduce using rule 82 (m_exp)]
    MOD        [reduce using rule 88 (term)]
    MOD        [reduce using rule 91 (um_term)]
    MOD        [reduce using rule 95 (t_term)]
    MOD        [reduce using rule 98 (var)]
    EQ         reduce using rule 16 (ident)
    EQ         [reduce using rule 77 (exp)]
    EQ         [reduce using rule 82 (m_exp)]
    EQ         [reduce using rule 88 (term)]
    EQ         [reduce using rule 91 (um_term)]
    EQ         [reduce using rule 95 (t_term)]
    EQ         [reduce using rule 98 (var)]
    NEQ        reduce using rule 16 (ident)
    NEQ        [reduce using rule 77 (exp)]
    NEQ        [reduce using rule 82 (m_exp)]
    NEQ        [reduce using rule 88 (term)]
    NEQ        [reduce using rule 91 (um_term)]
    NEQ        [reduce using rule 95 (t_term)]
    NEQ        [reduce using rule 98 (var)]
    LT         reduce using rule 16 (ident)
    LT         [reduce using rule 77 (exp)]
    LT         [reduce using rule 82 (m_exp)]
    LT         [reduce using rule 88 (term)]
    LT         [reduce using rule 91 (um_term)]
    LT         [reduce using rule 95 (t_term)]
    LT         [reduce using rule 98 (var)]
    GT         reduce using rule 16 (ident)
    GT         [reduce using rule 77 (exp)]
    GT         [reduce using rule 82 (m_exp)]
    GT         [reduce using rule 88 (term)]
    GT         [reduce using rule 91 (um_term)]
    GT         [reduce using rule 95 (t_term)]
    GT         [reduce using rule 98 (var)]
    LTE        reduce using rule 16 (ident)
    LTE        [reduce using rule 77 (exp)]
    LTE        [reduce using rule 82 (m_exp)]
    LTE        [reduce using rule 88 (term)]
    LTE        [reduce using rule 91 (um_term)]
    LTE        [reduce using rule 95 (t_term)]
    LTE        [reduce using rule 98 (var)]
    GTE        reduce using rule 16 (ident)
    GTE        [reduce using rule 77 (exp)]
    GTE        [reduce using rule 82 (m_exp)]
    GTE        [reduce using rule 88 (term)]
    GTE        [reduce using rule 91 (um_term)]
    GTE        [reduce using rule 95 (t_term)]
    GTE        [reduce using rule 98 (var)]
    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 77 (exp)]
    SEMICOLON  [reduce using rule 82 (m_exp)]
    SEMICOLON  [reduce using rule 88 (term)]
    SEMICOLON  [reduce using rule 91 (um_term)]
    SEMICOLON  [reduce using rule 95 (t_term)]
    SEMICOLON  [reduce using rule 98 (var)]
    COMMA      reduce using rule 16 (ident)
    COMMA      [reduce using rule 77 (exp)]
    COMMA      [reduce using rule 82 (m_exp)]
    COMMA      [reduce using rule 88 (term)]
    COMMA      [reduce using rule 91 (um_term)]
    COMMA      [reduce using rule 95 (t_term)]
    COMMA      [reduce using rule 98 (var)]
    L_PAREN    [reduce using rule 16 (ident)]
    L_PAREN    [reduce using rule 77 (exp)]
    L_PAREN    [reduce using rule 82 (m_exp)]
    L_PAREN    [reduce using rule 88 (term)]
    L_PAREN    [reduce using rule 91 (um_term)]
    L_PAREN    [reduce using rule 95 (t_term)]
    L_PAREN    [reduce using rule 98 (var)]
    R_PAREN    reduce using rule 16 (ident)
    R_PAREN    [reduce using rule 77 (exp)]
    R_PAREN    [reduce using rule 82 (m_exp)]
    R_PAREN    [reduce using rule 88 (term)]
    R_PAREN    [reduce using rule 91 (um_term)]
    R_PAREN    [reduce using rule 95 (t_term)]
    R_PAREN    [reduce using rule 98 (var)]
    BEG_ARR    reduce using rule 16 (ident)
    BEG_ARR    [reduce using rule 77 (exp)]
    BEG_ARR    [reduce using rule 82 (m_exp)]
    BEG_ARR    [reduce using rule 88 (term)]
    BEG_ARR    [reduce using rule 91 (um_term)]
    BEG_ARR    [reduce using rule 95 (t_term)]
    BEG_ARR    [reduce using rule 98 (var)]
    END_ARR    reduce using rule 16 (ident)
    END_ARR    [reduce using rule 77 (exp)]
    END_ARR    [reduce using rule 82 (m_exp)]
    END_ARR    [reduce using rule 88 (term)]
    END_ARR    [reduce using rule 91 (um_term)]
    END_ARR    [reduce using rule 95 (t_term)]
    END_ARR    [reduce using rule 98 (var)]
    NUMBER     [reduce using rule 16 (ident)]
    NUMBER     [reduce using rule 77 (exp)]
    NUMBER     [reduce using rule 82 (m_exp)]
    NUMBER     [reduce using rule 88 (term)]
    NUMBER     [reduce using rule 91 (um_term)]
    NUMBER     [reduce using rule 95 (t_term)]
    NUMBER     [reduce using rule 98 (var)]
    IDENT      [reduce using rule 16 (ident)]
    IDENT      [reduce using rule 77 (exp)]
    IDENT      [reduce using rule 82 (m_exp)]
    IDENT      [reduce using rule 88 (term)]
    IDENT      [reduce using rule 91 (um_term)]
    IDENT      [reduce using rule 95 (t_term)]
    IDENT      [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident    go to state 58
    exp      go to state 117
    m_exp    go to state 64
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 96

   75 exp: m_exp PLUS . exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    THEN       reduce using rule 16 (ident)
    THEN       [reduce using rule 77 (exp)]
    THEN       [reduce using rule 82 (m_exp)]
    THEN       [reduce using rule 88 (term)]
    THEN       [reduce using rule 91 (um_term)]
    THEN       [reduce using rule 95 (t_term)]
    THEN       [reduce using rule 98 (var)]
    BEG_LOOP   reduce using rule 16 (ident)
    BEG_LOOP   [reduce using rule 77 (exp)]
    BEG_LOOP   [reduce using rule 82 (m_exp)]
    BEG_LOOP   [reduce using rule 88 (term)]
    BEG_LOOP   [reduce using rule 91 (um_term)]
    BEG_LOOP   [reduce using rule 95 (t_term)]
    BEG_LOOP   [reduce using rule 98 (var)]
    AND        reduce using rule 16 (ident)
    AND        [reduce using rule 77 (exp)]
    AND        [reduce using rule 82 (m_exp)]
    AND        [reduce using rule 88 (term)]
    AND        [reduce using rule 91 (um_term)]
    AND        [reduce using rule 95 (t_term)]
    AND        [reduce using rule 98 (var)]
    OR         reduce using rule 16 (ident)
    OR         [reduce using rule 77 (exp)]
    OR         [reduce using rule 82 (m_exp)]
    OR         [reduce using rule 88 (term)]
    OR         [reduce using rule 91 (um_term)]
    OR         [reduce using rule 95 (t_term)]
    OR         [reduce using rule 98 (var)]
    MINUS      [reduce using rule 16 (ident)]
    MINUS      [reduce using rule 77 (exp)]
    MINUS      [reduce using rule 82 (m_exp)]
    MINUS      [reduce using rule 88 (term)]
    MINUS      [reduce using rule 91 (um_term)]
    MINUS      [reduce using rule 95 (t_term)]
    MINUS      [reduce using rule 98 (var)]
    PLUS       reduce using rule 16 (ident)
    PLUS       [reduce using rule 77 (exp)]
    PLUS       [reduce using rule 82 (m_exp)]
    PLUS       [reduce using rule 88 (term)]
    PLUS       [reduce using rule 91 (um_term)]
    PLUS       [reduce using rule 95 (t_term)]
    PLUS       [reduce using rule 98 (var)]
    MULT       reduce using rule 16 (ident)
    MULT       [reduce using rule 77 (exp)]
    MULT       [reduce using rule 82 (m_exp)]
    MULT       [reduce using rule 88 (term)]
    MULT       [reduce using rule 91 (um_term)]
    MULT       [reduce using rule 95 (t_term)]
    MULT       [reduce using rule 98 (var)]
    DIV        reduce using rule 16 (ident)
    DIV        [reduce using rule 77 (exp)]
    DIV        [reduce using rule 82 (m_exp)]
    DIV        [reduce using rule 88 (term)]
    DIV        [reduce using rule 91 (um_term)]
    DIV        [reduce using rule 95 (t_term)]
    DIV        [reduce using rule 98 (var)]
    MOD        reduce using rule 16 (ident)
    MOD        [reduce using rule 77 (exp)]
    MOD        [reduce using rule 82 (m_exp)]
    MOD        [reduce using rule 88 (term)]
    MOD        [reduce using rule 91 (um_term)]
    MOD        [reduce using rule 95 (t_term)]
    MOD        [reduce using rule 98 (var)]
    EQ         reduce using rule 16 (ident)
    EQ         [reduce using rule 77 (exp)]
    EQ         [reduce using rule 82 (m_exp)]
    EQ         [reduce using rule 88 (term)]
    EQ         [reduce using rule 91 (um_term)]
    EQ         [reduce using rule 95 (t_term)]
    EQ         [reduce using rule 98 (var)]
    NEQ        reduce using rule 16 (ident)
    NEQ        [reduce using rule 77 (exp)]
    NEQ        [reduce using rule 82 (m_exp)]
    NEQ        [reduce using rule 88 (term)]
    NEQ        [reduce using rule 91 (um_term)]
    NEQ        [reduce using rule 95 (t_term)]
    NEQ        [reduce using rule 98 (var)]
    LT         reduce using rule 16 (ident)
    LT         [reduce using rule 77 (exp)]
    LT         [reduce using rule 82 (m_exp)]
    LT         [reduce using rule 88 (term)]
    LT         [reduce using rule 91 (um_term)]
    LT         [reduce using rule 95 (t_term)]
    LT         [reduce using rule 98 (var)]
    GT         reduce using rule 16 (ident)
    GT         [reduce using rule 77 (exp)]
    GT         [reduce using rule 82 (m_exp)]
    GT         [reduce using rule 88 (term)]
    GT         [reduce using rule 91 (um_term)]
    GT         [reduce using rule 95 (t_term)]
    GT         [reduce using rule 98 (var)]
    LTE        reduce using rule 16 (ident)
    LTE        [reduce using rule 77 (exp)]
    LTE        [reduce using rule 82 (m_exp)]
    LTE        [reduce using rule 88 (term)]
    LTE        [reduce using rule 91 (um_term)]
    LTE        [reduce using rule 95 (t_term)]
    LTE        [reduce using rule 98 (var)]
    GTE        reduce using rule 16 (ident)
    GTE        [reduce using rule 77 (exp)]
    GTE        [reduce using rule 82 (m_exp)]
    GTE        [reduce using rule 88 (term)]
    GTE        [reduce using rule 91 (um_term)]
    GTE        [reduce using rule 95 (t_term)]
    GTE        [reduce using rule 98 (var)]
    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 77 (exp)]
    SEMICOLON  [reduce using rule 82 (m_exp)]
    SEMICOLON  [reduce using rule 88 (term)]
    SEMICOLON  [reduce using rule 91 (um_term)]
    SEMICOLON  [reduce using rule 95 (t_term)]
    SEMICOLON  [reduce using rule 98 (var)]
    COMMA      reduce using rule 16 (ident)
    COMMA      [reduce using rule 77 (exp)]
    COMMA      [reduce using rule 82 (m_exp)]
    COMMA      [reduce using rule 88 (term)]
    COMMA      [reduce using rule 91 (um_term)]
    COMMA      [reduce using rule 95 (t_term)]
    COMMA      [reduce using rule 98 (var)]
    L_PAREN    [reduce using rule 16 (ident)]
    L_PAREN    [reduce using rule 77 (exp)]
    L_PAREN    [reduce using rule 82 (m_exp)]
    L_PAREN    [reduce using rule 88 (term)]
    L_PAREN    [reduce using rule 91 (um_term)]
    L_PAREN    [reduce using rule 95 (t_term)]
    L_PAREN    [reduce using rule 98 (var)]
    R_PAREN    reduce using rule 16 (ident)
    R_PAREN    [reduce using rule 77 (exp)]
    R_PAREN    [reduce using rule 82 (m_exp)]
    R_PAREN    [reduce using rule 88 (term)]
    R_PAREN    [reduce using rule 91 (um_term)]
    R_PAREN    [reduce using rule 95 (t_term)]
    R_PAREN    [reduce using rule 98 (var)]
    BEG_ARR    reduce using rule 16 (ident)
    BEG_ARR    [reduce using rule 77 (exp)]
    BEG_ARR    [reduce using rule 82 (m_exp)]
    BEG_ARR    [reduce using rule 88 (term)]
    BEG_ARR    [reduce using rule 91 (um_term)]
    BEG_ARR    [reduce using rule 95 (t_term)]
    BEG_ARR    [reduce using rule 98 (var)]
    END_ARR    reduce using rule 16 (ident)
    END_ARR    [reduce using rule 77 (exp)]
    END_ARR    [reduce using rule 82 (m_exp)]
    END_ARR    [reduce using rule 88 (term)]
    END_ARR    [reduce using rule 91 (um_term)]
    END_ARR    [reduce using rule 95 (t_term)]
    END_ARR    [reduce using rule 98 (var)]
    NUMBER     [reduce using rule 16 (ident)]
    NUMBER     [reduce using rule 77 (exp)]
    NUMBER     [reduce using rule 82 (m_exp)]
    NUMBER     [reduce using rule 88 (term)]
    NUMBER     [reduce using rule 91 (um_term)]
    NUMBER     [reduce using rule 95 (t_term)]
    NUMBER     [reduce using rule 98 (var)]
    IDENT      [reduce using rule 16 (ident)]
    IDENT      [reduce using rule 77 (exp)]
    IDENT      [reduce using rule 82 (m_exp)]
    IDENT      [reduce using rule 88 (term)]
    IDENT      [reduce using rule 91 (um_term)]
    IDENT      [reduce using rule 95 (t_term)]
    IDENT      [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident    go to state 58
    exp      go to state 118
    m_exp    go to state 64
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 97

   79 m_exp: term MULT . m_exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    THEN       reduce using rule 16 (ident)
    THEN       [reduce using rule 82 (m_exp)]
    THEN       [reduce using rule 88 (term)]
    THEN       [reduce using rule 91 (um_term)]
    THEN       [reduce using rule 95 (t_term)]
    THEN       [reduce using rule 98 (var)]
    BEG_LOOP   reduce using rule 16 (ident)
    BEG_LOOP   [reduce using rule 82 (m_exp)]
    BEG_LOOP   [reduce using rule 88 (term)]
    BEG_LOOP   [reduce using rule 91 (um_term)]
    BEG_LOOP   [reduce using rule 95 (t_term)]
    BEG_LOOP   [reduce using rule 98 (var)]
    AND        reduce using rule 16 (ident)
    AND        [reduce using rule 82 (m_exp)]
    AND        [reduce using rule 88 (term)]
    AND        [reduce using rule 91 (um_term)]
    AND        [reduce using rule 95 (t_term)]
    AND        [reduce using rule 98 (var)]
    OR         reduce using rule 16 (ident)
    OR         [reduce using rule 82 (m_exp)]
    OR         [reduce using rule 88 (term)]
    OR         [reduce using rule 91 (um_term)]
    OR         [reduce using rule 95 (t_term)]
    OR         [reduce using rule 98 (var)]
    MINUS      [reduce using rule 16 (ident)]
    MINUS      [reduce using rule 82 (m_exp)]
    MINUS      [reduce using rule 88 (term)]
    MINUS      [reduce using rule 91 (um_term)]
    MINUS      [reduce using rule 95 (t_term)]
    MINUS      [reduce using rule 98 (var)]
    PLUS       reduce using rule 16 (ident)
    PLUS       [reduce using rule 82 (m_exp)]
    PLUS       [reduce using rule 88 (term)]
    PLUS       [reduce using rule 91 (um_term)]
    PLUS       [reduce using rule 95 (t_term)]
    PLUS       [reduce using rule 98 (var)]
    MULT       reduce using rule 16 (ident)
    MULT       [reduce using rule 82 (m_exp)]
    MULT       [reduce using rule 88 (term)]
    MULT       [reduce using rule 91 (um_term)]
    MULT       [reduce using rule 95 (t_term)]
    MULT       [reduce using rule 98 (var)]
    DIV        reduce using rule 16 (ident)
    DIV        [reduce using rule 82 (m_exp)]
    DIV        [reduce using rule 88 (term)]
    DIV        [reduce using rule 91 (um_term)]
    DIV        [reduce using rule 95 (t_term)]
    DIV        [reduce using rule 98 (var)]
    MOD        reduce using rule 16 (ident)
    MOD        [reduce using rule 82 (m_exp)]
    MOD        [reduce using rule 88 (term)]
    MOD        [reduce using rule 91 (um_term)]
    MOD        [reduce using rule 95 (t_term)]
    MOD        [reduce using rule 98 (var)]
    EQ         reduce using rule 16 (ident)
    EQ         [reduce using rule 82 (m_exp)]
    EQ         [reduce using rule 88 (term)]
    EQ         [reduce using rule 91 (um_term)]
    EQ         [reduce using rule 95 (t_term)]
    EQ         [reduce using rule 98 (var)]
    NEQ        reduce using rule 16 (ident)
    NEQ        [reduce using rule 82 (m_exp)]
    NEQ        [reduce using rule 88 (term)]
    NEQ        [reduce using rule 91 (um_term)]
    NEQ        [reduce using rule 95 (t_term)]
    NEQ        [reduce using rule 98 (var)]
    LT         reduce using rule 16 (ident)
    LT         [reduce using rule 82 (m_exp)]
    LT         [reduce using rule 88 (term)]
    LT         [reduce using rule 91 (um_term)]
    LT         [reduce using rule 95 (t_term)]
    LT         [reduce using rule 98 (var)]
    GT         reduce using rule 16 (ident)
    GT         [reduce using rule 82 (m_exp)]
    GT         [reduce using rule 88 (term)]
    GT         [reduce using rule 91 (um_term)]
    GT         [reduce using rule 95 (t_term)]
    GT         [reduce using rule 98 (var)]
    LTE        reduce using rule 16 (ident)
    LTE        [reduce using rule 82 (m_exp)]
    LTE        [reduce using rule 88 (term)]
    LTE        [reduce using rule 91 (um_term)]
    LTE        [reduce using rule 95 (t_term)]
    LTE        [reduce using rule 98 (var)]
    GTE        reduce using rule 16 (ident)
    GTE        [reduce using rule 82 (m_exp)]
    GTE        [reduce using rule 88 (term)]
    GTE        [reduce using rule 91 (um_term)]
    GTE        [reduce using rule 95 (t_term)]
    GTE        [reduce using rule 98 (var)]
    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 82 (m_exp)]
    SEMICOLON  [reduce using rule 88 (term)]
    SEMICOLON  [reduce using rule 91 (um_term)]
    SEMICOLON  [reduce using rule 95 (t_term)]
    SEMICOLON  [reduce using rule 98 (var)]
    COMMA      reduce using rule 16 (ident)
    COMMA      [reduce using rule 82 (m_exp)]
    COMMA      [reduce using rule 88 (term)]
    COMMA      [reduce using rule 91 (um_term)]
    COMMA      [reduce using rule 95 (t_term)]
    COMMA      [reduce using rule 98 (var)]
    L_PAREN    [reduce using rule 16 (ident)]
    L_PAREN    [reduce using rule 82 (m_exp)]
    L_PAREN    [reduce using rule 88 (term)]
    L_PAREN    [reduce using rule 91 (um_term)]
    L_PAREN    [reduce using rule 95 (t_term)]
    L_PAREN    [reduce using rule 98 (var)]
    R_PAREN    reduce using rule 16 (ident)
    R_PAREN    [reduce using rule 82 (m_exp)]
    R_PAREN    [reduce using rule 88 (term)]
    R_PAREN    [reduce using rule 91 (um_term)]
    R_PAREN    [reduce using rule 95 (t_term)]
    R_PAREN    [reduce using rule 98 (var)]
    BEG_ARR    reduce using rule 16 (ident)
    BEG_ARR    [reduce using rule 82 (m_exp)]
    BEG_ARR    [reduce using rule 88 (term)]
    BEG_ARR    [reduce using rule 91 (um_term)]
    BEG_ARR    [reduce using rule 95 (t_term)]
    BEG_ARR    [reduce using rule 98 (var)]
    END_ARR    reduce using rule 16 (ident)
    END_ARR    [reduce using rule 82 (m_exp)]
    END_ARR    [reduce using rule 88 (term)]
    END_ARR    [reduce using rule 91 (um_term)]
    END_ARR    [reduce using rule 95 (t_term)]
    END_ARR    [reduce using rule 98 (var)]
    NUMBER     [reduce using rule 16 (ident)]
    NUMBER     [reduce using rule 82 (m_exp)]
    NUMBER     [reduce using rule 88 (term)]
    NUMBER     [reduce using rule 91 (um_term)]
    NUMBER     [reduce using rule 95 (t_term)]
    NUMBER     [reduce using rule 98 (var)]
    IDENT      [reduce using rule 16 (ident)]
    IDENT      [reduce using rule 82 (m_exp)]
    IDENT      [reduce using rule 88 (term)]
    IDENT      [reduce using rule 91 (um_term)]
    IDENT      [reduce using rule 95 (t_term)]
    IDENT      [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident    go to state 58
    m_exp    go to state 119
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 98

   80 m_exp: term DIV . m_exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    THEN       reduce using rule 16 (ident)
    THEN       [reduce using rule 82 (m_exp)]
    THEN       [reduce using rule 88 (term)]
    THEN       [reduce using rule 91 (um_term)]
    THEN       [reduce using rule 95 (t_term)]
    THEN       [reduce using rule 98 (var)]
    BEG_LOOP   reduce using rule 16 (ident)
    BEG_LOOP   [reduce using rule 82 (m_exp)]
    BEG_LOOP   [reduce using rule 88 (term)]
    BEG_LOOP   [reduce using rule 91 (um_term)]
    BEG_LOOP   [reduce using rule 95 (t_term)]
    BEG_LOOP   [reduce using rule 98 (var)]
    AND        reduce using rule 16 (ident)
    AND        [reduce using rule 82 (m_exp)]
    AND        [reduce using rule 88 (term)]
    AND        [reduce using rule 91 (um_term)]
    AND        [reduce using rule 95 (t_term)]
    AND        [reduce using rule 98 (var)]
    OR         reduce using rule 16 (ident)
    OR         [reduce using rule 82 (m_exp)]
    OR         [reduce using rule 88 (term)]
    OR         [reduce using rule 91 (um_term)]
    OR         [reduce using rule 95 (t_term)]
    OR         [reduce using rule 98 (var)]
    MINUS      [reduce using rule 16 (ident)]
    MINUS      [reduce using rule 82 (m_exp)]
    MINUS      [reduce using rule 88 (term)]
    MINUS      [reduce using rule 91 (um_term)]
    MINUS      [reduce using rule 95 (t_term)]
    MINUS      [reduce using rule 98 (var)]
    PLUS       reduce using rule 16 (ident)
    PLUS       [reduce using rule 82 (m_exp)]
    PLUS       [reduce using rule 88 (term)]
    PLUS       [reduce using rule 91 (um_term)]
    PLUS       [reduce using rule 95 (t_term)]
    PLUS       [reduce using rule 98 (var)]
    MULT       reduce using rule 16 (ident)
    MULT       [reduce using rule 82 (m_exp)]
    MULT       [reduce using rule 88 (term)]
    MULT       [reduce using rule 91 (um_term)]
    MULT       [reduce using rule 95 (t_term)]
    MULT       [reduce using rule 98 (var)]
    DIV        reduce using rule 16 (ident)
    DIV        [reduce using rule 82 (m_exp)]
    DIV        [reduce using rule 88 (term)]
    DIV        [reduce using rule 91 (um_term)]
    DIV        [reduce using rule 95 (t_term)]
    DIV        [reduce using rule 98 (var)]
    MOD        reduce using rule 16 (ident)
    MOD        [reduce using rule 82 (m_exp)]
    MOD        [reduce using rule 88 (term)]
    MOD        [reduce using rule 91 (um_term)]
    MOD        [reduce using rule 95 (t_term)]
    MOD        [reduce using rule 98 (var)]
    EQ         reduce using rule 16 (ident)
    EQ         [reduce using rule 82 (m_exp)]
    EQ         [reduce using rule 88 (term)]
    EQ         [reduce using rule 91 (um_term)]
    EQ         [reduce using rule 95 (t_term)]
    EQ         [reduce using rule 98 (var)]
    NEQ        reduce using rule 16 (ident)
    NEQ        [reduce using rule 82 (m_exp)]
    NEQ        [reduce using rule 88 (term)]
    NEQ        [reduce using rule 91 (um_term)]
    NEQ        [reduce using rule 95 (t_term)]
    NEQ        [reduce using rule 98 (var)]
    LT         reduce using rule 16 (ident)
    LT         [reduce using rule 82 (m_exp)]
    LT         [reduce using rule 88 (term)]
    LT         [reduce using rule 91 (um_term)]
    LT         [reduce using rule 95 (t_term)]
    LT         [reduce using rule 98 (var)]
    GT         reduce using rule 16 (ident)
    GT         [reduce using rule 82 (m_exp)]
    GT         [reduce using rule 88 (term)]
    GT         [reduce using rule 91 (um_term)]
    GT         [reduce using rule 95 (t_term)]
    GT         [reduce using rule 98 (var)]
    LTE        reduce using rule 16 (ident)
    LTE        [reduce using rule 82 (m_exp)]
    LTE        [reduce using rule 88 (term)]
    LTE        [reduce using rule 91 (um_term)]
    LTE        [reduce using rule 95 (t_term)]
    LTE        [reduce using rule 98 (var)]
    GTE        reduce using rule 16 (ident)
    GTE        [reduce using rule 82 (m_exp)]
    GTE        [reduce using rule 88 (term)]
    GTE        [reduce using rule 91 (um_term)]
    GTE        [reduce using rule 95 (t_term)]
    GTE        [reduce using rule 98 (var)]
    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 82 (m_exp)]
    SEMICOLON  [reduce using rule 88 (term)]
    SEMICOLON  [reduce using rule 91 (um_term)]
    SEMICOLON  [reduce using rule 95 (t_term)]
    SEMICOLON  [reduce using rule 98 (var)]
    COMMA      reduce using rule 16 (ident)
    COMMA      [reduce using rule 82 (m_exp)]
    COMMA      [reduce using rule 88 (term)]
    COMMA      [reduce using rule 91 (um_term)]
    COMMA      [reduce using rule 95 (t_term)]
    COMMA      [reduce using rule 98 (var)]
    L_PAREN    [reduce using rule 16 (ident)]
    L_PAREN    [reduce using rule 82 (m_exp)]
    L_PAREN    [reduce using rule 88 (term)]
    L_PAREN    [reduce using rule 91 (um_term)]
    L_PAREN    [reduce using rule 95 (t_term)]
    L_PAREN    [reduce using rule 98 (var)]
    R_PAREN    reduce using rule 16 (ident)
    R_PAREN    [reduce using rule 82 (m_exp)]
    R_PAREN    [reduce using rule 88 (term)]
    R_PAREN    [reduce using rule 91 (um_term)]
    R_PAREN    [reduce using rule 95 (t_term)]
    R_PAREN    [reduce using rule 98 (var)]
    BEG_ARR    reduce using rule 16 (ident)
    BEG_ARR    [reduce using rule 82 (m_exp)]
    BEG_ARR    [reduce using rule 88 (term)]
    BEG_ARR    [reduce using rule 91 (um_term)]
    BEG_ARR    [reduce using rule 95 (t_term)]
    BEG_ARR    [reduce using rule 98 (var)]
    END_ARR    reduce using rule 16 (ident)
    END_ARR    [reduce using rule 82 (m_exp)]
    END_ARR    [reduce using rule 88 (term)]
    END_ARR    [reduce using rule 91 (um_term)]
    END_ARR    [reduce using rule 95 (t_term)]
    END_ARR    [reduce using rule 98 (var)]
    NUMBER     [reduce using rule 16 (ident)]
    NUMBER     [reduce using rule 82 (m_exp)]
    NUMBER     [reduce using rule 88 (term)]
    NUMBER     [reduce using rule 91 (um_term)]
    NUMBER     [reduce using rule 95 (t_term)]
    NUMBER     [reduce using rule 98 (var)]
    IDENT      [reduce using rule 16 (ident)]
    IDENT      [reduce using rule 82 (m_exp)]
    IDENT      [reduce using rule 88 (term)]
    IDENT      [reduce using rule 91 (um_term)]
    IDENT      [reduce using rule 95 (t_term)]
    IDENT      [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident    go to state 58
    m_exp    go to state 120
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 99

   81 m_exp: term MOD . m_exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    THEN       reduce using rule 16 (ident)
    THEN       [reduce using rule 82 (m_exp)]
    THEN       [reduce using rule 88 (term)]
    THEN       [reduce using rule 91 (um_term)]
    THEN       [reduce using rule 95 (t_term)]
    THEN       [reduce using rule 98 (var)]
    BEG_LOOP   reduce using rule 16 (ident)
    BEG_LOOP   [reduce using rule 82 (m_exp)]
    BEG_LOOP   [reduce using rule 88 (term)]
    BEG_LOOP   [reduce using rule 91 (um_term)]
    BEG_LOOP   [reduce using rule 95 (t_term)]
    BEG_LOOP   [reduce using rule 98 (var)]
    AND        reduce using rule 16 (ident)
    AND        [reduce using rule 82 (m_exp)]
    AND        [reduce using rule 88 (term)]
    AND        [reduce using rule 91 (um_term)]
    AND        [reduce using rule 95 (t_term)]
    AND        [reduce using rule 98 (var)]
    OR         reduce using rule 16 (ident)
    OR         [reduce using rule 82 (m_exp)]
    OR         [reduce using rule 88 (term)]
    OR         [reduce using rule 91 (um_term)]
    OR         [reduce using rule 95 (t_term)]
    OR         [reduce using rule 98 (var)]
    MINUS      [reduce using rule 16 (ident)]
    MINUS      [reduce using rule 82 (m_exp)]
    MINUS      [reduce using rule 88 (term)]
    MINUS      [reduce using rule 91 (um_term)]
    MINUS      [reduce using rule 95 (t_term)]
    MINUS      [reduce using rule 98 (var)]
    PLUS       reduce using rule 16 (ident)
    PLUS       [reduce using rule 82 (m_exp)]
    PLUS       [reduce using rule 88 (term)]
    PLUS       [reduce using rule 91 (um_term)]
    PLUS       [reduce using rule 95 (t_term)]
    PLUS       [reduce using rule 98 (var)]
    MULT       reduce using rule 16 (ident)
    MULT       [reduce using rule 82 (m_exp)]
    MULT       [reduce using rule 88 (term)]
    MULT       [reduce using rule 91 (um_term)]
    MULT       [reduce using rule 95 (t_term)]
    MULT       [reduce using rule 98 (var)]
    DIV        reduce using rule 16 (ident)
    DIV        [reduce using rule 82 (m_exp)]
    DIV        [reduce using rule 88 (term)]
    DIV        [reduce using rule 91 (um_term)]
    DIV        [reduce using rule 95 (t_term)]
    DIV        [reduce using rule 98 (var)]
    MOD        reduce using rule 16 (ident)
    MOD        [reduce using rule 82 (m_exp)]
    MOD        [reduce using rule 88 (term)]
    MOD        [reduce using rule 91 (um_term)]
    MOD        [reduce using rule 95 (t_term)]
    MOD        [reduce using rule 98 (var)]
    EQ         reduce using rule 16 (ident)
    EQ         [reduce using rule 82 (m_exp)]
    EQ         [reduce using rule 88 (term)]
    EQ         [reduce using rule 91 (um_term)]
    EQ         [reduce using rule 95 (t_term)]
    EQ         [reduce using rule 98 (var)]
    NEQ        reduce using rule 16 (ident)
    NEQ        [reduce using rule 82 (m_exp)]
    NEQ        [reduce using rule 88 (term)]
    NEQ        [reduce using rule 91 (um_term)]
    NEQ        [reduce using rule 95 (t_term)]
    NEQ        [reduce using rule 98 (var)]
    LT         reduce using rule 16 (ident)
    LT         [reduce using rule 82 (m_exp)]
    LT         [reduce using rule 88 (term)]
    LT         [reduce using rule 91 (um_term)]
    LT         [reduce using rule 95 (t_term)]
    LT         [reduce using rule 98 (var)]
    GT         reduce using rule 16 (ident)
    GT         [reduce using rule 82 (m_exp)]
    GT         [reduce using rule 88 (term)]
    GT         [reduce using rule 91 (um_term)]
    GT         [reduce using rule 95 (t_term)]
    GT         [reduce using rule 98 (var)]
    LTE        reduce using rule 16 (ident)
    LTE        [reduce using rule 82 (m_exp)]
    LTE        [reduce using rule 88 (term)]
    LTE        [reduce using rule 91 (um_term)]
    LTE        [reduce using rule 95 (t_term)]
    LTE        [reduce using rule 98 (var)]
    GTE        reduce using rule 16 (ident)
    GTE        [reduce using rule 82 (m_exp)]
    GTE        [reduce using rule 88 (term)]
    GTE        [reduce using rule 91 (um_term)]
    GTE        [reduce using rule 95 (t_term)]
    GTE        [reduce using rule 98 (var)]
    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 82 (m_exp)]
    SEMICOLON  [reduce using rule 88 (term)]
    SEMICOLON  [reduce using rule 91 (um_term)]
    SEMICOLON  [reduce using rule 95 (t_term)]
    SEMICOLON  [reduce using rule 98 (var)]
    COMMA      reduce using rule 16 (ident)
    COMMA      [reduce using rule 82 (m_exp)]
    COMMA      [reduce using rule 88 (term)]
    COMMA      [reduce using rule 91 (um_term)]
    COMMA      [reduce using rule 95 (t_term)]
    COMMA      [reduce using rule 98 (var)]
    L_PAREN    [reduce using rule 16 (ident)]
    L_PAREN    [reduce using rule 82 (m_exp)]
    L_PAREN    [reduce using rule 88 (term)]
    L_PAREN    [reduce using rule 91 (um_term)]
    L_PAREN    [reduce using rule 95 (t_term)]
    L_PAREN    [reduce using rule 98 (var)]
    R_PAREN    reduce using rule 16 (ident)
    R_PAREN    [reduce using rule 82 (m_exp)]
    R_PAREN    [reduce using rule 88 (term)]
    R_PAREN    [reduce using rule 91 (um_term)]
    R_PAREN    [reduce using rule 95 (t_term)]
    R_PAREN    [reduce using rule 98 (var)]
    BEG_ARR    reduce using rule 16 (ident)
    BEG_ARR    [reduce using rule 82 (m_exp)]
    BEG_ARR    [reduce using rule 88 (term)]
    BEG_ARR    [reduce using rule 91 (um_term)]
    BEG_ARR    [reduce using rule 95 (t_term)]
    BEG_ARR    [reduce using rule 98 (var)]
    END_ARR    reduce using rule 16 (ident)
    END_ARR    [reduce using rule 82 (m_exp)]
    END_ARR    [reduce using rule 88 (term)]
    END_ARR    [reduce using rule 91 (um_term)]
    END_ARR    [reduce using rule 95 (t_term)]
    END_ARR    [reduce using rule 98 (var)]
    NUMBER     [reduce using rule 16 (ident)]
    NUMBER     [reduce using rule 82 (m_exp)]
    NUMBER     [reduce using rule 88 (term)]
    NUMBER     [reduce using rule 91 (um_term)]
    NUMBER     [reduce using rule 95 (t_term)]
    NUMBER     [reduce using rule 98 (var)]
    IDENT      [reduce using rule 16 (ident)]
    IDENT      [reduce using rule 82 (m_exp)]
    IDENT      [reduce using rule 88 (term)]
    IDENT      [reduce using rule 91 (um_term)]
    IDENT      [reduce using rule 95 (t_term)]
    IDENT      [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident    go to state 58
    m_exp    go to state 121
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 100

   41 while_stmt: WHILE bool_exp BEG_LOOP . p_statement SEMICOLON END_LOOP

    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    DO      shift, and go to state 32
    CONT    shift, and go to state 33
    READ    shift, and go to state 34
    WRITE   shift, and go to state 35
    RETURN  shift, and go to state 36
    IDENT   shift, and go to state 4

    SEMICOLON  reduce using rule 35 (assign_stmt)
    SEMICOLON  [reduce using rule 37 (if_stmt)]
    SEMICOLON  [reduce using rule 42 (while_stmt)]
    SEMICOLON  [reduce using rule 44 (do_while_stmt)]
    SEMICOLON  [reduce using rule 46 (read_stmt)]
    SEMICOLON  [reduce using rule 48 (write_stmt)]
    SEMICOLON  [reduce using rule 50 (cont_stmt)]
    SEMICOLON  [reduce using rule 52 (return_stmt)]
    ASSIGN     reduce using rule 16 (ident)
    ASSIGN     [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident          go to state 37
    p_statement    go to state 122
    statement      go to state 40
    assign_stmt    go to state 41
    if_stmt        go to state 42
    while_stmt     go to state 43
    do_while_stmt  go to state 44
    read_stmt      go to state 45
    write_stmt     go to state 46
    cont_stmt      go to state 47
    return_stmt    go to state 48
    var            go to state 49


State 101

   43 do_while_stmt: DO BEG_LOOP p_statement . SEMICOLON END_LOOP WHILE bool_exp

    SEMICOLON  shift, and go to state 123


State 102

  100 c_var: var COMMA . c_var

    IDENT  shift, and go to state 4

    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 98 (var)]
    COMMA      reduce using rule 16 (ident)
    COMMA      [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident  go to state 37
    var    go to state 71
    c_var  go to state 124


State 103

   97 var: ident BEG_ARR exp . END_ARR

    END_ARR  shift, and go to state 125


State 104

   25 p_statement: statement SEMICOLON p_statement .

    $default  reduce using rule 25 (p_statement)


State 105

   34 assign_stmt: var ASSIGN exp .

    $default  reduce using rule 34 (assign_stmt)


State 106

   21 array: ARR BEG_ARR NUMBER END_ARR . OF

    OF  shift, and go to state 126


State 107

   94 t_term: L_PAREN exp . R_PAREN

    R_PAREN  shift, and go to state 109


State 108

   65 all_b_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 65 (all_b_exp)


State 109

   94 t_term: L_PAREN exp R_PAREN .

    $default  reduce using rule 94 (t_term)


State 110

   86 term: ident L_PAREN R_PAREN .

    $default  reduce using rule 86 (term)


State 111

   83 c_exp: exp .
   84      | exp . COMMA c_exp

    COMMA  shift, and go to state 127

    $default  reduce using rule 83 (c_exp)


State 112

   87 term: ident L_PAREN c_exp . R_PAREN

    R_PAREN  shift, and go to state 128


State 113

   36 if_stmt: IF bool_exp THEN p_statement . SEMICOLON else_stmt END_IF

    SEMICOLON  shift, and go to state 129


State 114

   54 bool_exp: r_and_exp OR bool_exp .

    $default  reduce using rule 54 (bool_exp)


State 115

   57 r_and_exp: r_exp AND r_and_exp .

    $default  reduce using rule 57 (r_and_exp)


State 116

   62 all_b_exp: exp comp exp .

    $default  reduce using rule 62 (all_b_exp)


State 117

   76 exp: m_exp MINUS exp .

    $default  reduce using rule 76 (exp)


State 118

   75 exp: m_exp PLUS exp .

    $default  reduce using rule 75 (exp)


State 119

   79 m_exp: term MULT m_exp .

    $default  reduce using rule 79 (m_exp)


State 120

   80 m_exp: term DIV m_exp .

    $default  reduce using rule 80 (m_exp)


State 121

   81 m_exp: term MOD m_exp .

    $default  reduce using rule 81 (m_exp)


State 122

   41 while_stmt: WHILE bool_exp BEG_LOOP p_statement . SEMICOLON END_LOOP

    SEMICOLON  shift, and go to state 130


State 123

   43 do_while_stmt: DO BEG_LOOP p_statement SEMICOLON . END_LOOP WHILE bool_exp

    END_LOOP  shift, and go to state 131


State 124

  100 c_var: var COMMA c_var .

    $default  reduce using rule 100 (c_var)


State 125

   97 var: ident BEG_ARR exp END_ARR .

    $default  reduce using rule 97 (var)


State 126

   21 array: ARR BEG_ARR NUMBER END_ARR OF .

    $default  reduce using rule 21 (array)


State 127

   84 c_exp: exp COMMA . c_exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 80
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    MINUS     [reduce using rule 16 (ident)]
    MINUS     [reduce using rule 82 (m_exp)]
    MINUS     [reduce using rule 88 (term)]
    MINUS     [reduce using rule 91 (um_term)]
    MINUS     [reduce using rule 95 (t_term)]
    MINUS     [reduce using rule 98 (var)]
    PLUS      reduce using rule 16 (ident)
    PLUS      [reduce using rule 82 (m_exp)]
    PLUS      [reduce using rule 88 (term)]
    PLUS      [reduce using rule 91 (um_term)]
    PLUS      [reduce using rule 95 (t_term)]
    PLUS      [reduce using rule 98 (var)]
    MULT      reduce using rule 16 (ident)
    MULT      [reduce using rule 88 (term)]
    MULT      [reduce using rule 91 (um_term)]
    MULT      [reduce using rule 95 (t_term)]
    MULT      [reduce using rule 98 (var)]
    DIV       reduce using rule 16 (ident)
    DIV       [reduce using rule 88 (term)]
    DIV       [reduce using rule 91 (um_term)]
    DIV       [reduce using rule 95 (t_term)]
    DIV       [reduce using rule 98 (var)]
    MOD       reduce using rule 16 (ident)
    MOD       [reduce using rule 88 (term)]
    MOD       [reduce using rule 91 (um_term)]
    MOD       [reduce using rule 95 (t_term)]
    MOD       [reduce using rule 98 (var)]
    COMMA     reduce using rule 16 (ident)
    COMMA     [reduce using rule 77 (exp)]
    COMMA     [reduce using rule 82 (m_exp)]
    COMMA     [reduce using rule 88 (term)]
    COMMA     [reduce using rule 91 (um_term)]
    COMMA     [reduce using rule 95 (t_term)]
    COMMA     [reduce using rule 98 (var)]
    L_PAREN   [reduce using rule 16 (ident)]
    R_PAREN   reduce using rule 16 (ident)
    R_PAREN   [reduce using rule 77 (exp)]
    R_PAREN   [reduce using rule 82 (m_exp)]
    R_PAREN   [reduce using rule 88 (term)]
    R_PAREN   [reduce using rule 91 (um_term)]
    R_PAREN   [reduce using rule 95 (t_term)]
    R_PAREN   [reduce using rule 98 (var)]
    $default  reduce using rule 16 (ident)

    ident    go to state 58
    exp      go to state 111
    m_exp    go to state 64
    c_exp    go to state 132
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 128

   87 term: ident L_PAREN c_exp R_PAREN .

    $default  reduce using rule 87 (term)


State 129

   36 if_stmt: IF bool_exp THEN p_statement SEMICOLON . else_stmt END_IF

    ELSE  shift, and go to state 133

    END_IF    reduce using rule 38 (else_stmt)
    END_IF    [reduce using rule 40 (else_stmt)]
    $default  reduce using rule 38 (else_stmt)

    else_stmt  go to state 134


State 130

   41 while_stmt: WHILE bool_exp BEG_LOOP p_statement SEMICOLON . END_LOOP

    END_LOOP  shift, and go to state 135


State 131

   43 do_while_stmt: DO BEG_LOOP p_statement SEMICOLON END_LOOP . WHILE bool_exp

    WHILE  shift, and go to state 136


State 132

   84 c_exp: exp COMMA c_exp .

    $default  reduce using rule 84 (c_exp)


State 133

   39 else_stmt: ELSE . statement SEMICOLON

    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    DO      shift, and go to state 32
    CONT    shift, and go to state 33
    READ    shift, and go to state 34
    WRITE   shift, and go to state 35
    RETURN  shift, and go to state 36
    IDENT   shift, and go to state 4

    SEMICOLON  reduce using rule 35 (assign_stmt)
    SEMICOLON  [reduce using rule 37 (if_stmt)]
    SEMICOLON  [reduce using rule 42 (while_stmt)]
    SEMICOLON  [reduce using rule 44 (do_while_stmt)]
    SEMICOLON  [reduce using rule 46 (read_stmt)]
    SEMICOLON  [reduce using rule 48 (write_stmt)]
    SEMICOLON  [reduce using rule 50 (cont_stmt)]
    SEMICOLON  [reduce using rule 52 (return_stmt)]
    ASSIGN     reduce using rule 16 (ident)
    ASSIGN     [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident          go to state 37
    statement      go to state 137
    assign_stmt    go to state 41
    if_stmt        go to state 42
    while_stmt     go to state 43
    do_while_stmt  go to state 44
    read_stmt      go to state 45
    write_stmt     go to state 46
    cont_stmt      go to state 47
    return_stmt    go to state 48
    var            go to state 49


State 134

   36 if_stmt: IF bool_exp THEN p_statement SEMICOLON else_stmt . END_IF

    END_IF  shift, and go to state 138


State 135

   41 while_stmt: WHILE bool_exp BEG_LOOP p_statement SEMICOLON END_LOOP .

    $default  reduce using rule 41 (while_stmt)


State 136

   43 do_while_stmt: DO BEG_LOOP p_statement SEMICOLON END_LOOP WHILE . bool_exp

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    AND        reduce using rule 16 (ident)
    AND        [reduce using rule 61 (r_exp)]
    AND        [reduce using rule 66 (all_b_exp)]
    AND        [reduce using rule 77 (exp)]
    AND        [reduce using rule 82 (m_exp)]
    AND        [reduce using rule 88 (term)]
    AND        [reduce using rule 91 (um_term)]
    AND        [reduce using rule 95 (t_term)]
    AND        [reduce using rule 98 (var)]
    OR         reduce using rule 16 (ident)
    OR         [reduce using rule 58 (r_and_exp)]
    OR         [reduce using rule 61 (r_exp)]
    OR         [reduce using rule 66 (all_b_exp)]
    OR         [reduce using rule 77 (exp)]
    OR         [reduce using rule 82 (m_exp)]
    OR         [reduce using rule 88 (term)]
    OR         [reduce using rule 91 (um_term)]
    OR         [reduce using rule 95 (t_term)]
    OR         [reduce using rule 98 (var)]
    MINUS      [reduce using rule 16 (ident)]
    MINUS      [reduce using rule 77 (exp)]
    MINUS      [reduce using rule 82 (m_exp)]
    MINUS      [reduce using rule 88 (term)]
    MINUS      [reduce using rule 91 (um_term)]
    MINUS      [reduce using rule 95 (t_term)]
    MINUS      [reduce using rule 98 (var)]
    PLUS       reduce using rule 16 (ident)
    PLUS       [reduce using rule 77 (exp)]
    PLUS       [reduce using rule 82 (m_exp)]
    PLUS       [reduce using rule 88 (term)]
    PLUS       [reduce using rule 91 (um_term)]
    PLUS       [reduce using rule 95 (t_term)]
    PLUS       [reduce using rule 98 (var)]
    MULT       reduce using rule 16 (ident)
    MULT       [reduce using rule 77 (exp)]
    MULT       [reduce using rule 82 (m_exp)]
    MULT       [reduce using rule 88 (term)]
    MULT       [reduce using rule 91 (um_term)]
    MULT       [reduce using rule 95 (t_term)]
    MULT       [reduce using rule 98 (var)]
    DIV        reduce using rule 16 (ident)
    DIV        [reduce using rule 77 (exp)]
    DIV        [reduce using rule 82 (m_exp)]
    DIV        [reduce using rule 88 (term)]
    DIV        [reduce using rule 91 (um_term)]
    DIV        [reduce using rule 95 (t_term)]
    DIV        [reduce using rule 98 (var)]
    MOD        reduce using rule 16 (ident)
    MOD        [reduce using rule 77 (exp)]
    MOD        [reduce using rule 82 (m_exp)]
    MOD        [reduce using rule 88 (term)]
    MOD        [reduce using rule 91 (um_term)]
    MOD        [reduce using rule 95 (t_term)]
    MOD        [reduce using rule 98 (var)]
    EQ         reduce using rule 16 (ident)
    EQ         [reduce using rule 77 (exp)]
    EQ         [reduce using rule 82 (m_exp)]
    EQ         [reduce using rule 88 (term)]
    EQ         [reduce using rule 91 (um_term)]
    EQ         [reduce using rule 95 (t_term)]
    EQ         [reduce using rule 98 (var)]
    NEQ        reduce using rule 16 (ident)
    NEQ        [reduce using rule 77 (exp)]
    NEQ        [reduce using rule 82 (m_exp)]
    NEQ        [reduce using rule 88 (term)]
    NEQ        [reduce using rule 91 (um_term)]
    NEQ        [reduce using rule 95 (t_term)]
    NEQ        [reduce using rule 98 (var)]
    LT         reduce using rule 16 (ident)
    LT         [reduce using rule 77 (exp)]
    LT         [reduce using rule 82 (m_exp)]
    LT         [reduce using rule 88 (term)]
    LT         [reduce using rule 91 (um_term)]
    LT         [reduce using rule 95 (t_term)]
    LT         [reduce using rule 98 (var)]
    GT         reduce using rule 16 (ident)
    GT         [reduce using rule 77 (exp)]
    GT         [reduce using rule 82 (m_exp)]
    GT         [reduce using rule 88 (term)]
    GT         [reduce using rule 91 (um_term)]
    GT         [reduce using rule 95 (t_term)]
    GT         [reduce using rule 98 (var)]
    LTE        reduce using rule 16 (ident)
    LTE        [reduce using rule 77 (exp)]
    LTE        [reduce using rule 82 (m_exp)]
    LTE        [reduce using rule 88 (term)]
    LTE        [reduce using rule 91 (um_term)]
    LTE        [reduce using rule 95 (t_term)]
    LTE        [reduce using rule 98 (var)]
    GTE        reduce using rule 16 (ident)
    GTE        [reduce using rule 77 (exp)]
    GTE        [reduce using rule 82 (m_exp)]
    GTE        [reduce using rule 88 (term)]
    GTE        [reduce using rule 91 (um_term)]
    GTE        [reduce using rule 95 (t_term)]
    GTE        [reduce using rule 98 (var)]
    SEMICOLON  reduce using rule 16 (ident)
    SEMICOLON  [reduce using rule 55 (bool_exp)]
    SEMICOLON  [reduce using rule 58 (r_and_exp)]
    SEMICOLON  [reduce using rule 61 (r_exp)]
    SEMICOLON  [reduce using rule 66 (all_b_exp)]
    SEMICOLON  [reduce using rule 77 (exp)]
    SEMICOLON  [reduce using rule 82 (m_exp)]
    SEMICOLON  [reduce using rule 88 (term)]
    SEMICOLON  [reduce using rule 91 (um_term)]
    SEMICOLON  [reduce using rule 95 (t_term)]
    SEMICOLON  [reduce using rule 98 (var)]
    L_PAREN    [reduce using rule 16 (ident)]
    L_PAREN    [reduce using rule 77 (exp)]
    L_PAREN    [reduce using rule 82 (m_exp)]
    L_PAREN    [reduce using rule 88 (term)]
    L_PAREN    [reduce using rule 91 (um_term)]
    L_PAREN    [reduce using rule 95 (t_term)]
    L_PAREN    [reduce using rule 98 (var)]
    BEG_ARR    reduce using rule 16 (ident)
    BEG_ARR    [reduce using rule 77 (exp)]
    BEG_ARR    [reduce using rule 82 (m_exp)]
    BEG_ARR    [reduce using rule 88 (term)]
    BEG_ARR    [reduce using rule 91 (um_term)]
    BEG_ARR    [reduce using rule 95 (t_term)]
    BEG_ARR    [reduce using rule 98 (var)]
    NUMBER     [reduce using rule 16 (ident)]
    NUMBER     [reduce using rule 77 (exp)]
    NUMBER     [reduce using rule 82 (m_exp)]
    NUMBER     [reduce using rule 88 (term)]
    NUMBER     [reduce using rule 91 (um_term)]
    NUMBER     [reduce using rule 95 (t_term)]
    NUMBER     [reduce using rule 98 (var)]
    IDENT      [reduce using rule 16 (ident)]
    IDENT      [reduce using rule 77 (exp)]
    IDENT      [reduce using rule 82 (m_exp)]
    IDENT      [reduce using rule 88 (term)]
    IDENT      [reduce using rule 91 (um_term)]
    IDENT      [reduce using rule 95 (t_term)]
    IDENT      [reduce using rule 98 (var)]
    $default   reduce using rule 16 (ident)

    ident      go to state 58
    bool_exp   go to state 139
    r_and_exp  go to state 60
    r_exp      go to state 61
    all_b_exp  go to state 62
    exp        go to state 63
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 137

   39 else_stmt: ELSE statement . SEMICOLON

    SEMICOLON  shift, and go to state 140


State 138

   36 if_stmt: IF bool_exp THEN p_statement SEMICOLON else_stmt END_IF .

    $default  reduce using rule 36 (if_stmt)


State 139

   43 do_while_stmt: DO BEG_LOOP p_statement SEMICOLON END_LOOP WHILE bool_exp .

    $default  reduce using rule 43 (do_while_stmt)


State 140

   39 else_stmt: ELSE statement SEMICOLON .

    $default  reduce using rule 39 (else_stmt)
