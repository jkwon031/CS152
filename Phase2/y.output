Grammar

    0 $accept: program $end

    1 program: %empty
    2        | function program

    3 function: FUNC ident SEMICOLON params local body

    4 params: BEG_PARAMS declarations END_PARAMS

    5 local: BEG_LOC declarations END_LOC

    6 body: BEG_BOD s_statement END_BOD

    7 declarations: %empty
    8             | declaration SEMICOLON declarations

    9 declaration: d_ident COLON array INTEGER
   10            | declaration d_ident

   11 ident: IDENT

   12 d_ident: ident
   13        | ident COMMA d_ident

   14 array: %empty
   15      | ARR BEG_ARR NUMBER END_ARR OF

   16 s_statement: %empty
   17            | p_statement

   18 p_statement: statement SEMICOLON
   19            | statement SEMICOLON p_statement

   20 statement: assign_stmt
   21          | if_stmt
   22          | while_stmt
   23          | do_while_stmt
   24          | read_stmt
   25          | write_stmt
   26          | cont_stmt
   27          | return_stmt

   28 assign_stmt: var ASSIGN exp

   29 if_stmt: IF bool_exp THEN p_statement else_stmt END_IF

   30 else_stmt: %empty
   31          | ELSE p_statement

   32 while_stmt: WHILE bool_exp BEG_LOOP p_statement END_LOOP

   33 do_while_stmt: DO BEG_LOOP p_statement END_LOOP WHILE bool_exp

   34 read_stmt: READ c_var

   35 write_stmt: WRITE c_var

   36 cont_stmt: CONT

   37 return_stmt: RETURN exp

   38 bool_exp: r_and_exp
   39         | r_and_exp OR bool_exp

   40 r_and_exp: r_exp
   41          | r_exp AND r_and_exp

   42 r_exp: all_b_exp
   43      | NOT all_b_exp

   44 all_b_exp: exp comp exp
   45          | TRUE
   46          | FALSE
   47          | L_PAREN bool_exp R_PAREN

   48 comp: EQ
   49     | NEQ
   50     | LT
   51     | GT
   52     | LTE
   53     | GTE

   54 exp: m_exp
   55    | m_exp PLUS exp
   56    | m_exp MINUS exp

   57 m_exp: term
   58      | term MULT m_exp
   59      | term DIV m_exp
   60      | term MOD m_exp

   61 c_exp: exp
   62      | exp COMMA c_exp

   63 term: um_term
   64     | ident L_PAREN R_PAREN
   65     | ident L_PAREN c_exp R_PAREN

   66 um_term: MINUS t_term
   67        | t_term

   68 t_term: var
   69       | NUMBER
   70       | L_PAREN exp R_PAREN

   71 var: ident
   72    | ident BEG_ARR exp END_ARR

   73 c_var: var
   74      | var COMMA c_var


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNC (258) 3
BEG_PARAMS (259) 4
END_PARAMS (260) 4
BEG_LOC (261) 5
END_LOC (262) 5
BEG_BOD (263) 6
END_BOD (264) 6
INTEGER (265) 9
ARR (266) 15
OF (267) 15
IF (268) 29
THEN (269) 29
END_IF (270) 29
ELSE (271) 31
WHILE (272) 32 33
DO (273) 33
BEG_LOOP (274) 32 33
END_LOOP (275) 32 33
CONT (276) 36
READ (277) 34
WRITE (278) 35
AND (279) 41
OR (280) 39
NOT (281) 43
TRUE (282) 45
FALSE (283) 46
RETURN (284) 37
MINUS (285) 56 66
PLUS (286) 55
MULT (287) 58
DIV (288) 59
MOD (289) 60
EQ (290) 48
NEQ (291) 49
LT (292) 50
GT (293) 51
LTE (294) 52
GTE (295) 53
SEMICOLON (296) 3 8 18 19
COLON (297) 9
COMMA (298) 13 62 74
L_PAREN (299) 47 64 65 70
R_PAREN (300) 47 64 65 70
BEG_ARR (301) 15 72
END_ARR (302) 15 72
ASSIGN (303) 28
NUMBER (304) 15 69
IDENT (305) 11
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0 2
function (54)
    on left: 3, on right: 2
params (55)
    on left: 4, on right: 3
local (56)
    on left: 5, on right: 3
body (57)
    on left: 6, on right: 3
declarations (58)
    on left: 7 8, on right: 4 5 8
declaration (59)
    on left: 9 10, on right: 8 10
ident (60)
    on left: 11, on right: 3 12 13 64 65 71 72
d_ident (61)
    on left: 12 13, on right: 9 10 13
array (62)
    on left: 14 15, on right: 9
s_statement (63)
    on left: 16 17, on right: 6
p_statement (64)
    on left: 18 19, on right: 17 19 29 31 32 33
statement (65)
    on left: 20 21 22 23 24 25 26 27, on right: 18 19
assign_stmt (66)
    on left: 28, on right: 20
if_stmt (67)
    on left: 29, on right: 21
else_stmt (68)
    on left: 30 31, on right: 29
while_stmt (69)
    on left: 32, on right: 22
do_while_stmt (70)
    on left: 33, on right: 23
read_stmt (71)
    on left: 34, on right: 24
write_stmt (72)
    on left: 35, on right: 25
cont_stmt (73)
    on left: 36, on right: 26
return_stmt (74)
    on left: 37, on right: 27
bool_exp (75)
    on left: 38 39, on right: 29 32 33 39 47
r_and_exp (76)
    on left: 40 41, on right: 38 39 41
r_exp (77)
    on left: 42 43, on right: 40 41
all_b_exp (78)
    on left: 44 45 46 47, on right: 42 43
comp (79)
    on left: 48 49 50 51 52 53, on right: 44
exp (80)
    on left: 54 55 56, on right: 28 37 44 55 56 61 62 70 72
m_exp (81)
    on left: 57 58 59 60, on right: 54 55 56 58 59 60
c_exp (82)
    on left: 61 62, on right: 62 65
term (83)
    on left: 63 64 65, on right: 57 58 59 60
um_term (84)
    on left: 66 67, on right: 63
t_term (85)
    on left: 68 69 70, on right: 66 67
var (86)
    on left: 71 72, on right: 28 68 73 74
c_var (87)
    on left: 73 74, on right: 34 35 74


State 0

    0 $accept: . program $end

    FUNC  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 2
    function  go to state 3


State 1

    3 function: FUNC . ident SEMICOLON params local body

    IDENT  shift, and go to state 4

    ident  go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: function . program

    FUNC  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 7
    function  go to state 3


State 4

   11 ident: IDENT .

    $default  reduce using rule 11 (ident)


State 5

    3 function: FUNC ident . SEMICOLON params local body

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    2 program: function program .

    $default  reduce using rule 2 (program)


State 8

    3 function: FUNC ident SEMICOLON . params local body

    BEG_PARAMS  shift, and go to state 9

    params  go to state 10


State 9

    4 params: BEG_PARAMS . declarations END_PARAMS

    IDENT  shift, and go to state 4

    $default  reduce using rule 7 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    ident         go to state 13
    d_ident       go to state 14


State 10

    3 function: FUNC ident SEMICOLON params . local body

    BEG_LOC  shift, and go to state 15

    local  go to state 16


State 11

    4 params: BEG_PARAMS declarations . END_PARAMS

    END_PARAMS  shift, and go to state 17


State 12

    8 declarations: declaration . SEMICOLON declarations
   10 declaration: declaration . d_ident

    SEMICOLON  shift, and go to state 18
    IDENT      shift, and go to state 4

    ident    go to state 13
    d_ident  go to state 19


State 13

   12 d_ident: ident .
   13        | ident . COMMA d_ident

    COMMA  shift, and go to state 20

    $default  reduce using rule 12 (d_ident)


State 14

    9 declaration: d_ident . COLON array INTEGER

    COLON  shift, and go to state 21


State 15

    5 local: BEG_LOC . declarations END_LOC

    IDENT  shift, and go to state 4

    $default  reduce using rule 7 (declarations)

    declarations  go to state 22
    declaration   go to state 12
    ident         go to state 13
    d_ident       go to state 14


State 16

    3 function: FUNC ident SEMICOLON params local . body

    BEG_BOD  shift, and go to state 23

    body  go to state 24


State 17

    4 params: BEG_PARAMS declarations END_PARAMS .

    $default  reduce using rule 4 (params)


State 18

    8 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 4

    $default  reduce using rule 7 (declarations)

    declarations  go to state 25
    declaration   go to state 12
    ident         go to state 13
    d_ident       go to state 14


State 19

   10 declaration: declaration d_ident .

    $default  reduce using rule 10 (declaration)


State 20

   13 d_ident: ident COMMA . d_ident

    IDENT  shift, and go to state 4

    ident    go to state 13
    d_ident  go to state 26


State 21

    9 declaration: d_ident COLON . array INTEGER

    ARR  shift, and go to state 27

    $default  reduce using rule 14 (array)

    array  go to state 28


State 22

    5 local: BEG_LOC declarations . END_LOC

    END_LOC  shift, and go to state 29


State 23

    6 body: BEG_BOD . s_statement END_BOD

    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    DO      shift, and go to state 32
    CONT    shift, and go to state 33
    READ    shift, and go to state 34
    WRITE   shift, and go to state 35
    RETURN  shift, and go to state 36
    IDENT   shift, and go to state 4

    $default  reduce using rule 16 (s_statement)

    ident          go to state 37
    s_statement    go to state 38
    p_statement    go to state 39
    statement      go to state 40
    assign_stmt    go to state 41
    if_stmt        go to state 42
    while_stmt     go to state 43
    do_while_stmt  go to state 44
    read_stmt      go to state 45
    write_stmt     go to state 46
    cont_stmt      go to state 47
    return_stmt    go to state 48
    var            go to state 49


State 24

    3 function: FUNC ident SEMICOLON params local body .

    $default  reduce using rule 3 (function)


State 25

    8 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


State 26

   13 d_ident: ident COMMA d_ident .

    $default  reduce using rule 13 (d_ident)


State 27

   15 array: ARR . BEG_ARR NUMBER END_ARR OF

    BEG_ARR  shift, and go to state 50


State 28

    9 declaration: d_ident COLON array . INTEGER

    INTEGER  shift, and go to state 51


State 29

    5 local: BEG_LOC declarations END_LOC .

    $default  reduce using rule 5 (local)


State 30

   29 if_stmt: IF . bool_exp THEN p_statement else_stmt END_IF

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident      go to state 58
    bool_exp   go to state 59
    r_and_exp  go to state 60
    r_exp      go to state 61
    all_b_exp  go to state 62
    exp        go to state 63
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 31

   32 while_stmt: WHILE . bool_exp BEG_LOOP p_statement END_LOOP

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident      go to state 58
    bool_exp   go to state 69
    r_and_exp  go to state 60
    r_exp      go to state 61
    all_b_exp  go to state 62
    exp        go to state 63
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 32

   33 do_while_stmt: DO . BEG_LOOP p_statement END_LOOP WHILE bool_exp

    BEG_LOOP  shift, and go to state 70


State 33

   36 cont_stmt: CONT .

    $default  reduce using rule 36 (cont_stmt)


State 34

   34 read_stmt: READ . c_var

    IDENT  shift, and go to state 4

    ident  go to state 37
    var    go to state 71
    c_var  go to state 72


State 35

   35 write_stmt: WRITE . c_var

    IDENT  shift, and go to state 4

    ident  go to state 37
    var    go to state 71
    c_var  go to state 73


State 36

   37 return_stmt: RETURN . exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident    go to state 58
    exp      go to state 75
    m_exp    go to state 64
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 37

   71 var: ident .
   72    | ident . BEG_ARR exp END_ARR

    BEG_ARR  shift, and go to state 76

    $default  reduce using rule 71 (var)


State 38

    6 body: BEG_BOD s_statement . END_BOD

    END_BOD  shift, and go to state 77


State 39

   17 s_statement: p_statement .

    $default  reduce using rule 17 (s_statement)


State 40

   18 p_statement: statement . SEMICOLON
   19            | statement . SEMICOLON p_statement

    SEMICOLON  shift, and go to state 78


State 41

   20 statement: assign_stmt .

    $default  reduce using rule 20 (statement)


State 42

   21 statement: if_stmt .

    $default  reduce using rule 21 (statement)


State 43

   22 statement: while_stmt .

    $default  reduce using rule 22 (statement)


State 44

   23 statement: do_while_stmt .

    $default  reduce using rule 23 (statement)


State 45

   24 statement: read_stmt .

    $default  reduce using rule 24 (statement)


State 46

   25 statement: write_stmt .

    $default  reduce using rule 25 (statement)


State 47

   26 statement: cont_stmt .

    $default  reduce using rule 26 (statement)


State 48

   27 statement: return_stmt .

    $default  reduce using rule 27 (statement)


State 49

   28 assign_stmt: var . ASSIGN exp

    ASSIGN  shift, and go to state 79


State 50

   15 array: ARR BEG_ARR . NUMBER END_ARR OF

    NUMBER  shift, and go to state 80


State 51

    9 declaration: d_ident COLON array INTEGER .

    $default  reduce using rule 9 (declaration)


State 52

   43 r_exp: NOT . all_b_exp

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident      go to state 58
    all_b_exp  go to state 81
    exp        go to state 63
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 53

   45 all_b_exp: TRUE .

    $default  reduce using rule 45 (all_b_exp)


State 54

   46 all_b_exp: FALSE .

    $default  reduce using rule 46 (all_b_exp)


State 55

   66 um_term: MINUS . t_term

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident   go to state 37
    t_term  go to state 82
    var     go to state 68


State 56

   47 all_b_exp: L_PAREN . bool_exp R_PAREN
   70 t_term: L_PAREN . exp R_PAREN

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident      go to state 58
    bool_exp   go to state 83
    r_and_exp  go to state 60
    r_exp      go to state 61
    all_b_exp  go to state 62
    exp        go to state 84
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 57

   69 t_term: NUMBER .

    $default  reduce using rule 69 (t_term)


State 58

   64 term: ident . L_PAREN R_PAREN
   65     | ident . L_PAREN c_exp R_PAREN
   71 var: ident .
   72    | ident . BEG_ARR exp END_ARR

    L_PAREN  shift, and go to state 85
    BEG_ARR  shift, and go to state 76

    $default  reduce using rule 71 (var)


State 59

   29 if_stmt: IF bool_exp . THEN p_statement else_stmt END_IF

    THEN  shift, and go to state 86


State 60

   38 bool_exp: r_and_exp .
   39         | r_and_exp . OR bool_exp

    OR  shift, and go to state 87

    $default  reduce using rule 38 (bool_exp)


State 61

   40 r_and_exp: r_exp .
   41          | r_exp . AND r_and_exp

    AND  shift, and go to state 88

    $default  reduce using rule 40 (r_and_exp)


State 62

   42 r_exp: all_b_exp .

    $default  reduce using rule 42 (r_exp)


State 63

   44 all_b_exp: exp . comp exp

    EQ   shift, and go to state 89
    NEQ  shift, and go to state 90
    LT   shift, and go to state 91
    GT   shift, and go to state 92
    LTE  shift, and go to state 93
    GTE  shift, and go to state 94

    comp  go to state 95


State 64

   54 exp: m_exp .
   55    | m_exp . PLUS exp
   56    | m_exp . MINUS exp

    MINUS  shift, and go to state 96
    PLUS   shift, and go to state 97

    $default  reduce using rule 54 (exp)


State 65

   57 m_exp: term .
   58      | term . MULT m_exp
   59      | term . DIV m_exp
   60      | term . MOD m_exp

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 57 (m_exp)


State 66

   63 term: um_term .

    $default  reduce using rule 63 (term)


State 67

   67 um_term: t_term .

    $default  reduce using rule 67 (um_term)


State 68

   68 t_term: var .

    $default  reduce using rule 68 (t_term)


State 69

   32 while_stmt: WHILE bool_exp . BEG_LOOP p_statement END_LOOP

    BEG_LOOP  shift, and go to state 101


State 70

   33 do_while_stmt: DO BEG_LOOP . p_statement END_LOOP WHILE bool_exp

    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    DO      shift, and go to state 32
    CONT    shift, and go to state 33
    READ    shift, and go to state 34
    WRITE   shift, and go to state 35
    RETURN  shift, and go to state 36
    IDENT   shift, and go to state 4

    ident          go to state 37
    p_statement    go to state 102
    statement      go to state 40
    assign_stmt    go to state 41
    if_stmt        go to state 42
    while_stmt     go to state 43
    do_while_stmt  go to state 44
    read_stmt      go to state 45
    write_stmt     go to state 46
    cont_stmt      go to state 47
    return_stmt    go to state 48
    var            go to state 49


State 71

   73 c_var: var .
   74      | var . COMMA c_var

    COMMA  shift, and go to state 103

    $default  reduce using rule 73 (c_var)


State 72

   34 read_stmt: READ c_var .

    $default  reduce using rule 34 (read_stmt)


State 73

   35 write_stmt: WRITE c_var .

    $default  reduce using rule 35 (write_stmt)


State 74

   70 t_term: L_PAREN . exp R_PAREN

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident    go to state 58
    exp      go to state 104
    m_exp    go to state 64
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 75

   37 return_stmt: RETURN exp .

    $default  reduce using rule 37 (return_stmt)


State 76

   72 var: ident BEG_ARR . exp END_ARR

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident    go to state 58
    exp      go to state 105
    m_exp    go to state 64
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 77

    6 body: BEG_BOD s_statement END_BOD .

    $default  reduce using rule 6 (body)


State 78

   18 p_statement: statement SEMICOLON .
   19            | statement SEMICOLON . p_statement

    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    DO      shift, and go to state 32
    CONT    shift, and go to state 33
    READ    shift, and go to state 34
    WRITE   shift, and go to state 35
    RETURN  shift, and go to state 36
    IDENT   shift, and go to state 4

    $default  reduce using rule 18 (p_statement)

    ident          go to state 37
    p_statement    go to state 106
    statement      go to state 40
    assign_stmt    go to state 41
    if_stmt        go to state 42
    while_stmt     go to state 43
    do_while_stmt  go to state 44
    read_stmt      go to state 45
    write_stmt     go to state 46
    cont_stmt      go to state 47
    return_stmt    go to state 48
    var            go to state 49


State 79

   28 assign_stmt: var ASSIGN . exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident    go to state 58
    exp      go to state 107
    m_exp    go to state 64
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 80

   15 array: ARR BEG_ARR NUMBER . END_ARR OF

    END_ARR  shift, and go to state 108


State 81

   43 r_exp: NOT all_b_exp .

    $default  reduce using rule 43 (r_exp)


State 82

   66 um_term: MINUS t_term .

    $default  reduce using rule 66 (um_term)


State 83

   47 all_b_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 109


State 84

   44 all_b_exp: exp . comp exp
   70 t_term: L_PAREN exp . R_PAREN

    EQ       shift, and go to state 89
    NEQ      shift, and go to state 90
    LT       shift, and go to state 91
    GT       shift, and go to state 92
    LTE      shift, and go to state 93
    GTE      shift, and go to state 94
    R_PAREN  shift, and go to state 110

    comp  go to state 95


State 85

   64 term: ident L_PAREN . R_PAREN
   65     | ident L_PAREN . c_exp R_PAREN

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 74
    R_PAREN  shift, and go to state 111
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident    go to state 58
    exp      go to state 112
    m_exp    go to state 64
    c_exp    go to state 113
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 86

   29 if_stmt: IF bool_exp THEN . p_statement else_stmt END_IF

    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    DO      shift, and go to state 32
    CONT    shift, and go to state 33
    READ    shift, and go to state 34
    WRITE   shift, and go to state 35
    RETURN  shift, and go to state 36
    IDENT   shift, and go to state 4

    ident          go to state 37
    p_statement    go to state 114
    statement      go to state 40
    assign_stmt    go to state 41
    if_stmt        go to state 42
    while_stmt     go to state 43
    do_while_stmt  go to state 44
    read_stmt      go to state 45
    write_stmt     go to state 46
    cont_stmt      go to state 47
    return_stmt    go to state 48
    var            go to state 49


State 87

   39 bool_exp: r_and_exp OR . bool_exp

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident      go to state 58
    bool_exp   go to state 115
    r_and_exp  go to state 60
    r_exp      go to state 61
    all_b_exp  go to state 62
    exp        go to state 63
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 88

   41 r_and_exp: r_exp AND . r_and_exp

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident      go to state 58
    r_and_exp  go to state 116
    r_exp      go to state 61
    all_b_exp  go to state 62
    exp        go to state 63
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 89

   48 comp: EQ .

    $default  reduce using rule 48 (comp)


State 90

   49 comp: NEQ .

    $default  reduce using rule 49 (comp)


State 91

   50 comp: LT .

    $default  reduce using rule 50 (comp)


State 92

   51 comp: GT .

    $default  reduce using rule 51 (comp)


State 93

   52 comp: LTE .

    $default  reduce using rule 52 (comp)


State 94

   53 comp: GTE .

    $default  reduce using rule 53 (comp)


State 95

   44 all_b_exp: exp comp . exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident    go to state 58
    exp      go to state 117
    m_exp    go to state 64
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 96

   56 exp: m_exp MINUS . exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident    go to state 58
    exp      go to state 118
    m_exp    go to state 64
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 97

   55 exp: m_exp PLUS . exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident    go to state 58
    exp      go to state 119
    m_exp    go to state 64
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 98

   58 m_exp: term MULT . m_exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident    go to state 58
    m_exp    go to state 120
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 99

   59 m_exp: term DIV . m_exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident    go to state 58
    m_exp    go to state 121
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 100

   60 m_exp: term MOD . m_exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident    go to state 58
    m_exp    go to state 122
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 101

   32 while_stmt: WHILE bool_exp BEG_LOOP . p_statement END_LOOP

    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    DO      shift, and go to state 32
    CONT    shift, and go to state 33
    READ    shift, and go to state 34
    WRITE   shift, and go to state 35
    RETURN  shift, and go to state 36
    IDENT   shift, and go to state 4

    ident          go to state 37
    p_statement    go to state 123
    statement      go to state 40
    assign_stmt    go to state 41
    if_stmt        go to state 42
    while_stmt     go to state 43
    do_while_stmt  go to state 44
    read_stmt      go to state 45
    write_stmt     go to state 46
    cont_stmt      go to state 47
    return_stmt    go to state 48
    var            go to state 49


State 102

   33 do_while_stmt: DO BEG_LOOP p_statement . END_LOOP WHILE bool_exp

    END_LOOP  shift, and go to state 124


State 103

   74 c_var: var COMMA . c_var

    IDENT  shift, and go to state 4

    ident  go to state 37
    var    go to state 71
    c_var  go to state 125


State 104

   70 t_term: L_PAREN exp . R_PAREN

    R_PAREN  shift, and go to state 110


State 105

   72 var: ident BEG_ARR exp . END_ARR

    END_ARR  shift, and go to state 126


State 106

   19 p_statement: statement SEMICOLON p_statement .

    $default  reduce using rule 19 (p_statement)


State 107

   28 assign_stmt: var ASSIGN exp .

    $default  reduce using rule 28 (assign_stmt)


State 108

   15 array: ARR BEG_ARR NUMBER END_ARR . OF

    OF  shift, and go to state 127


State 109

   47 all_b_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 47 (all_b_exp)


State 110

   70 t_term: L_PAREN exp R_PAREN .

    $default  reduce using rule 70 (t_term)


State 111

   64 term: ident L_PAREN R_PAREN .

    $default  reduce using rule 64 (term)


State 112

   61 c_exp: exp .
   62      | exp . COMMA c_exp

    COMMA  shift, and go to state 128

    $default  reduce using rule 61 (c_exp)


State 113

   65 term: ident L_PAREN c_exp . R_PAREN

    R_PAREN  shift, and go to state 129


State 114

   29 if_stmt: IF bool_exp THEN p_statement . else_stmt END_IF

    ELSE  shift, and go to state 130

    $default  reduce using rule 30 (else_stmt)

    else_stmt  go to state 131


State 115

   39 bool_exp: r_and_exp OR bool_exp .

    $default  reduce using rule 39 (bool_exp)


State 116

   41 r_and_exp: r_exp AND r_and_exp .

    $default  reduce using rule 41 (r_and_exp)


State 117

   44 all_b_exp: exp comp exp .

    $default  reduce using rule 44 (all_b_exp)


State 118

   56 exp: m_exp MINUS exp .

    $default  reduce using rule 56 (exp)


State 119

   55 exp: m_exp PLUS exp .

    $default  reduce using rule 55 (exp)


State 120

   58 m_exp: term MULT m_exp .

    $default  reduce using rule 58 (m_exp)


State 121

   59 m_exp: term DIV m_exp .

    $default  reduce using rule 59 (m_exp)


State 122

   60 m_exp: term MOD m_exp .

    $default  reduce using rule 60 (m_exp)


State 123

   32 while_stmt: WHILE bool_exp BEG_LOOP p_statement . END_LOOP

    END_LOOP  shift, and go to state 132


State 124

   33 do_while_stmt: DO BEG_LOOP p_statement END_LOOP . WHILE bool_exp

    WHILE  shift, and go to state 133


State 125

   74 c_var: var COMMA c_var .

    $default  reduce using rule 74 (c_var)


State 126

   72 var: ident BEG_ARR exp END_ARR .

    $default  reduce using rule 72 (var)


State 127

   15 array: ARR BEG_ARR NUMBER END_ARR OF .

    $default  reduce using rule 15 (array)


State 128

   62 c_exp: exp COMMA . c_exp

    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident    go to state 58
    exp      go to state 112
    m_exp    go to state 64
    c_exp    go to state 134
    term     go to state 65
    um_term  go to state 66
    t_term   go to state 67
    var      go to state 68


State 129

   65 term: ident L_PAREN c_exp R_PAREN .

    $default  reduce using rule 65 (term)


State 130

   31 else_stmt: ELSE . p_statement

    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    DO      shift, and go to state 32
    CONT    shift, and go to state 33
    READ    shift, and go to state 34
    WRITE   shift, and go to state 35
    RETURN  shift, and go to state 36
    IDENT   shift, and go to state 4

    ident          go to state 37
    p_statement    go to state 135
    statement      go to state 40
    assign_stmt    go to state 41
    if_stmt        go to state 42
    while_stmt     go to state 43
    do_while_stmt  go to state 44
    read_stmt      go to state 45
    write_stmt     go to state 46
    cont_stmt      go to state 47
    return_stmt    go to state 48
    var            go to state 49


State 131

   29 if_stmt: IF bool_exp THEN p_statement else_stmt . END_IF

    END_IF  shift, and go to state 136


State 132

   32 while_stmt: WHILE bool_exp BEG_LOOP p_statement END_LOOP .

    $default  reduce using rule 32 (while_stmt)


State 133

   33 do_while_stmt: DO BEG_LOOP p_statement END_LOOP WHILE . bool_exp

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    MINUS    shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 4

    ident      go to state 58
    bool_exp   go to state 137
    r_and_exp  go to state 60
    r_exp      go to state 61
    all_b_exp  go to state 62
    exp        go to state 63
    m_exp      go to state 64
    term       go to state 65
    um_term    go to state 66
    t_term     go to state 67
    var        go to state 68


State 134

   62 c_exp: exp COMMA c_exp .

    $default  reduce using rule 62 (c_exp)


State 135

   31 else_stmt: ELSE p_statement .

    $default  reduce using rule 31 (else_stmt)


State 136

   29 if_stmt: IF bool_exp THEN p_statement else_stmt END_IF .

    $default  reduce using rule 29 (if_stmt)


State 137

   33 do_while_stmt: DO BEG_LOOP p_statement END_LOOP WHILE bool_exp .

    $default  reduce using rule 33 (do_while_stmt)
